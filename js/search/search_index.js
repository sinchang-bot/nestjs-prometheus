var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/PrometheusAsyncOptions.html",[0,0.559,1,0.813]],["body/interfaces/PrometheusAsyncOptions.html",[0,0.75,1,0.929,2,0.765,3,0.765,4,0.765,5,0.537,6,1.078,7,1.863,8,1.863,9,0.443,10,1.863,11,1.857,12,1.997,13,1.997,14,1.997,15,0.8,16,0.068,17,1.09,18,0.644,19,1.291,20,1.291,21,0.91,22,0.775,23,0.644,24,1.555,25,0.537,26,1.09,27,1.09,28,1.291,29,1.418,30,0.907,31,1.681,32,0.907,33,0.907,34,1.555,35,1.309,36,1.863,37,1.291,38,1.078,39,0.907,40,1.291,41,0.907,42,0.907,43,1.291,44,0.907,45,1.291,46,0.765,47,1.291,48,1.104,49,1.863,50,1.863,51,1.863,52,1.863,53,1.863,54,1.863,55,1.863,56,1.078,57,1.078,58,1.078,59,1.078,60,1.078,61,0.039,62,0.765,63,1.078,64,1.291,65,0.039,66,0.027]],["title/controllers/PrometheusController.html",[67,1.146,68,1.361]],["body/controllers/PrometheusController.html",[3,1.105,4,1.105,5,0.776,9,0.907,11,1.31,15,0.664,16,0.066,17,1.318,18,0.93,21,0.996,22,0.776,26,0.93,61,0.039,65,0.05,66,0.039,67,1.682,68,1.998,69,2.278,70,2.278,71,2.394,72,2.904,73,4.6,74,2.904,75,1.865,76,2.904,77,1.865,78,1.556,79,1.556,80,2.394,81,2.904,82,2.904,83,1.865,84,2.904,85,2.904,86,2.904,87,2.904]],["title/modules/PrometheusModule.html",[25,0.679,88,1.146]],["body/modules/PrometheusModule.html",[1,1.283,2,0.496,3,0.496,4,0.496,5,0.349,11,1.567,12,1.746,13,1.397,14,1.118,15,0.618,16,0.068,17,1.112,18,0.418,21,0.349,22,0.349,23,1.283,25,0.796,26,0.418,27,1.168,29,0.496,32,0.588,34,1.397,35,0.588,38,0.699,39,0.588,44,0.588,46,0.794,48,0.496,56,0.699,57,0.699,58,0.699,59,0.699,60,0.699,61,0.028,62,0.496,63,0.699,65,0.028,66,0.017,67,0.588,68,1.596,69,1.636,71,0.837,75,2.231,77,2.231,78,1.862,79,1.862,80,1.339,83,0.837,88,1.344,89,0.837,90,1.304,91,2.979,92,4.168,93,1.304,94,2.086,95,3.258,96,1.304,97,2.086,98,1.304,99,1.304,100,2.555,101,2.086,102,1.304,103,1.304,104,2.086,105,1.304,106,1.304,107,1.636,108,1.023,109,2.086,110,1.304,111,3.258,112,1.023,113,2.086,114,1.304,115,1.304,116,1.304,117,1.304,118,1.674,119,1.304,120,2.336,121,2.555,122,2.607,123,1.304,124,2.086,125,2.433,126,2.086,127,1.304,128,0.837,129,1.304,130,0.837,131,2.086,132,2.086,133,2.979,134,2.086,135,1.636,136,2.086,137,2.086,138,3.258,139,2.086,140,2.086,141,1.304,142,1.023,143,1.304,144,1.304,145,1.023,146,1.304,147,1.304,148,1.304,149,1.304,150,1.304,151,1.304]],["title/interfaces/PrometheusOptions.html",[0,0.559,27,0.813]],["body/interfaces/PrometheusOptions.html",[0,0.737,1,0.625,2,0.744,3,0.744,4,0.744,5,0.522,6,1.047,7,1.255,8,1.255,9,0.43,10,1.825,11,1.659,12,1.047,13,1.047,14,1.047,15,0.749,16,0.067,17,1.072,18,0.625,19,1.255,20,1.255,21,0.983,22,0.895,23,0.91,24,1.97,25,0.759,26,1.072,27,1.177,28,1.825,29,1.551,30,1.282,31,1.762,32,1.659,33,1.511,34,1.795,35,1.839,36,2.15,37,1.255,38,1.047,39,0.881,40,1.255,41,0.881,42,0.881,43,1.255,44,0.881,45,1.255,46,0.744,47,1.255,48,1.081,49,1.825,50,1.825,51,1.825,52,1.825,53,1.825,54,1.825,55,1.825,56,1.047,57,1.047,58,1.047,59,1.047,60,1.047,61,0.038,62,0.744,63,1.047,64,1.255,65,0.038,66,0.026,152,1.954,153,2.842,154,1.532]],["title/interfaces/PrometheusOptionsFactory.html",[0,0.559,46,0.967]],["body/interfaces/PrometheusOptionsFactory.html",[0,0.771,1,0.677,2,0.805,3,0.805,4,0.805,5,0.566,6,1.134,7,1.359,8,1.359,9,0.466,12,1.134,13,1.134,14,1.134,15,0.623,16,0.068,17,1.121,18,0.677,19,1.359,20,1.359,21,0.936,22,0.804,23,0.677,24,1.613,25,0.566,26,1.121,27,1.221,28,1.359,29,1.452,30,0.955,31,1.721,32,0.955,33,0.955,34,1.613,35,1.358,36,1.933,37,1.359,38,1.134,39,0.955,40,1.359,41,0.955,42,0.955,43,1.359,44,0.955,45,1.359,46,1.145,47,2.449,48,1.333,49,1.933,50,1.933,51,1.933,52,1.933,53,1.933,54,1.933,55,1.933,56,1.134,57,1.134,58,1.134,59,1.134,60,1.134,61,0.04,62,0.805,63,1.134,64,1.359,65,0.04,66,0.028,71,1.933,75,1.359,79,1.134,155,2.117]],["title/interfaces/TestHarness.html",[0,0.559,156,1.631]],["body/interfaces/TestHarness.html",[0,0.475,1,0.976,2,0.821,3,0.821,4,0.821,5,0.576,9,0.475,10,1.958,15,0.722,16,0.067,17,1.231,18,0.69,23,0.976,26,1.299,27,0.976,48,1.161,61,0.029,62,1.161,65,0.041,66,0.029,88,0.973,121,3.305,125,1.958,128,1.958,142,2.392,145,3.017,156,1.958,157,1.156,158,3.653,159,3.653,160,4.658,161,2.392,162,2.156,163,2.156,164,2.156,165,2.156,166,2.156,167,1.691,168,1.385,169,3.05,170,2.156,171,3.05,172,3.05,173,3.05,174,3.05,175,1.385,176,2.156]],["title/changelog.html",[177,1.684,178,1.684,179,1.684]],["body/changelog.html",[5,0.619,16,0.049,21,0.857,22,0.857,25,0.619,41,1.447,42,1.045,61,0.031,65,0.043,66,0.031,112,1.817,179,1.817,180,2.317,181,3.969,182,2.317,183,2.317,184,2.317,185,3.207,186,3.207,187,2.317,188,2.317,189,3.207,190,2.317,191,2.317,192,3.207,193,2.317,194,2.317,195,2.317,196,2.317,197,2.317,198,2.317,199,2.317,200,2.317,201,3.207,202,2.317,203,2.317,204,2.317,205,2.317,206,2.317,207,2.317,208,2.317,209,4.311,210,4.311,211,3.969,212,4.167,213,4.167,214,3.969,215,3.207,216,2.317,217,2.317,218,2.317,219,3.207,220,3.207,221,2.317,222,2.317,223,2.317,224,3.207,225,2.317,226,2.317,227,2.317,228,2.317,229,2.317,230,2.317,231,2.317,232,2.317,233,2.317,234,3.207,235,2.317,236,2.515,237,2.317,238,2.317,239,2.317,240,2.317,241,2.317,242,2.317,243,2.317,244,2.317,245,2.317,246,2.317,247,2.317,248,2.317]],["title/coverage.html",[249,2.678]],["body/coverage.html",[0,0.9,1,0.795,5,0.664,6,2.044,15,0.442,16,0.066,27,0.795,46,0.945,61,0.033,62,1.767,65,0.045,66,0.033,67,1.121,68,1.331,70,1.948,118,1.595,135,1.948,156,1.595,157,2.044,168,1.595,175,1.595,249,1.948,250,2.484,251,2.484,252,2.484,253,1.948,254,2.484,255,4.829,256,4.693,257,3.364,258,1.948,259,1.948,260,3.364,261,2.484,262,2.484,263,1.948,264,1.595,265,1.948,266,1.595,267,1.948,268,1.595,269,1.948,270,1.595,271,2.16,272,1.948,273,1.948,274,2.484,275,2.484]],["title/dependencies.html",[276,2.147,277,1.952]],["body/dependencies.html",[16,0.062,21,1,22,1,61,0.05,65,0.058,66,0.05,277,2.404,278,3.744,279,3.744]],["title/miscellaneous/functions.html",[280,0.817,281,2.385]],["body/miscellaneous/functions.html",[9,0.507,11,2.06,15,0.409,16,0.066,23,1.44,33,1.038,48,1.215,61,0.031,65,0.043,66,0.031,77,2.932,78,2.503,79,2.447,80,1.477,100,3.104,107,1.804,157,1.233,168,2.049,175,2.049,258,1.804,259,2.503,263,1.804,264,2.049,265,1.804,266,2.049,267,1.804,268,2.049,269,1.804,270,2.049,271,1.477,272,2.503,273,2.503,280,0.876,281,1.804,282,2.503,283,2.503,284,2.301,285,2.301,286,2.301,287,2.301,288,2.301,289,2.301,290,2.301,291,2.301,292,2.301,293,2.301,294,2.301,295,2.301,296,2.301,297,2.301,298,2.301]],["title/index.html",[9,0.473,177,1.684,178,1.684]],["body/index.html",[16,0.068,17,1.479,18,1.225,21,0.44,22,0.808,24,2.249,25,1.144,26,1.225,29,1.679,30,1.128,31,1.726,32,0.742,35,1.128,39,0.742,41,0.742,42,0.742,44,0.742,61,0.022,65,0.034,66,0.022,78,0.882,83,2.457,88,1.639,108,1.29,120,1.29,125,1.056,128,2.333,130,1.056,236,1.29,264,1.942,266,1.056,268,1.056,270,1.056,299,1.645,300,2.5,301,1.645,302,2.5,303,2.5,304,3.024,305,2.5,306,2.5,307,2.5,308,2.5,309,2.5,310,2.85,311,1.29,312,1.29,313,1.29,314,1.645,315,4.351,316,1.645,317,1.645,318,1.645,319,3.634,320,3.634,321,1.645,322,1.645,323,1.645,324,1.645,325,3.378,326,1.645,327,1.645,328,1.645,329,1.645,330,2.5,331,1.645,332,1.645,333,1.645,334,1.645]],["title/modules.html",[89,2.193]],["body/modules.html",[16,0.059,30,1.698,61,0.05,65,0.059,66,0.05,88,1.698,89,2.417,335,3.764,336,3.764]],["title/overview.html",[337,2.678]],["body/overview.html",[2,1.337,16,0.056,25,1.121,61,0.047,65,0.056,66,0.047,67,1.585,130,2.256,277,2.256,337,2.756,338,3.514,339,3.514,340,3.514,341,3.514,342,4.196,343,3.514,344,3.514,345,4.196,346,3.514]],["title/miscellaneous/typealiases.html",[280,0.817,347,3.041]],["body/miscellaneous/typealiases.html",[9,0.715,15,0.578,16,0.065,23,1.281,29,1.522,61,0.044,65,0.054,66,0.044,157,1.741,158,3.137,159,3.137,161,2.547,167,2.547,271,2.085,280,1.236,282,3.137,283,3.137,310,2.547,311,2.547,312,2.547,313,2.547,348,3.248,349,3.248,350,3.248,351,3.248,352,3.248]],["title/miscellaneous/variables.html",[280,0.817,353,2.385]],["body/miscellaneous/variables.html",[9,0.79,15,0.638,16,0.063,31,1.618,33,1.618,61,0.048,65,0.057,66,0.048,118,2.906,154,2.813,253,2.813,280,1.365,353,2.813,354,3.587]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":205,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":188,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":206,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":190,"title":{},"body":{"changelog.html":{}}}],["036d776",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":345,"title":{},"body":{"overview.html":{}}}],["100",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":207,"title":{},"body":{"changelog.html":{}}}],["2019",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":189,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":191,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["3/3",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":346,"title":{},"body":{"overview.html":{}}}],["75709d3",{"_index":204,"title":{},"body":{"changelog.html":{}}}],["7c27bc9",{"_index":222,"title":{},"body":{"changelog.html":{}}}],["8c0b22c",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["9854da3",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["9eb3295",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["a85aede",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["a895bfd",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":236,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agent",{"_index":158,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":348,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["app",{"_index":159,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["app.init",{"_index":173,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["appmodule",{"_index":320,"title":{},"body":{"index.html":{}}}],["async",{"_index":142,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["asyncproviders",{"_index":126,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["available",{"_index":30,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":145,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["ba6cba2",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["be01dfb",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["bootstrap",{"_index":340,"title":{},"body":{"overview.html":{}}}],["breaking",{"_index":192,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":336,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":179,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":181,"title":{},"body":{"changelog.html":{}}}],["changing",{"_index":302,"title":{},"body":{"index.html":{}}}],["class",{"_index":83,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"index.html":{}}}],["client",{"_index":21,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["client#configuration",{"_index":323,"title":{},"body":{"index.html":{}}}],["client#default",{"_index":43,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["client.counterconfiguration",{"_index":351,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client.defaultmetricscollectorconfiguration",{"_index":45,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["client.gaugeconfiguration",{"_index":349,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client.histogramconfiguration",{"_index":352,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client.metric",{"_index":292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["client.register.contenttype",{"_index":86,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["client.summaryconfiguration",{"_index":350,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client/releases/tag/v12.0.0",{"_index":197,"title":{},"body":{"changelog.html":{}}}],["clientnpm",{"_index":316,"title":{},"body":{"index.html":{}}}],["clientusage",{"_index":318,"title":{},"body":{"index.html":{}}}],["collectdefaultmetrics",{"_index":117,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["collectdefaultmetrics(options.defaultmetrics.config",{"_index":149,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["collected",{"_index":36,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["collection",{"_index":306,"title":{},"body":{"index.html":{}}}],["commit",{"_index":186,"title":{},"body":{"changelog.html":{}}}],["compile",{"_index":171,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["config",{"_index":44,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["configuration",{"_index":34,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["configureserver",{"_index":93,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["configureserver(options",{"_index":94,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["configuring",{"_index":307,"title":{},"body":{"index.html":{}}}],["const",{"_index":121,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["constants",{"_index":119,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["constructor(@injectmetric(\"metric_name",{"_index":331,"title":{},"body":{"index.html":{}}}],["controller",{"_index":67,"title":{"controllers/PrometheusController.html":{}},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":69,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{}}}],["correct",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["counter",{"_index":310,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["coverage",{"_index":249,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createasyncoptionsprovider",{"_index":97,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":98,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createasyncprometheusmodule",{"_index":175,"title":{},"body":{"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createasyncprometheusmodule(options",{"_index":289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createasyncproviders",{"_index":101,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createasyncproviders(options",{"_index":102,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createprometheusmodule",{"_index":168,"title":{},"body":{"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createprometheusmodule(options",{"_index":290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createprometheusoptions",{"_index":47,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["currently",{"_index":56,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["declarations",{"_index":339,"title":{},"body":{"overview.html":{}}}],["decorators",{"_index":74,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["default",{"_index":31,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultmetrics",{"_index":35,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["defined",{"_index":75,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["dependencies",{"_index":277,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":152,"title":{},"body":{"interfaces/PrometheusOptions.html":{}}}],["disable",{"_index":50,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["disabling",{"_index":305,"title":{},"body":{"index.html":{}}}],["docs",{"_index":243,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":183,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":58,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["during",{"_index":63,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["dynamicmodule",{"_index":111,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["enabled",{"_index":39,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["endpoint",{"_index":304,"title":{},"body":{"index.html":{}}}],["error",{"_index":136,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["eslint",{"_index":49,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["eslint/no",{"_index":54,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["explicit",{"_index":55,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["exports",{"_index":341,"title":{},"body":{"overview.html":{}}}],["express",{"_index":82,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["extends",{"_index":7,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["false",{"_index":322,"title":{},"body":{"index.html":{}}}],["features",{"_index":201,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{}}}],["fixes",{"_index":213,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":62,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["functions",{"_index":281,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gauge",{"_index":311,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["getorcreatemetric",{"_index":272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorcreatemetric(type",{"_index":291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":177,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gettoken",{"_index":273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettoken(name",{"_index":293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["github.ref",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["graph",{"_index":335,"title":{},"body":{"modules.html":{}}}],["guidelines",{"_index":187,"title":{},"body":{"changelog.html":{}}}],["help",{"_index":327,"title":{},"body":{"index.html":{}}}],["histogram",{"_index":312,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["http",{"_index":303,"title":{},"body":{"index.html":{}}}],["https://github.com/siimon/prom",{"_index":42,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"changelog.html":{},"index.html":{}}}],["identifier",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["imports",{"_index":128,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["include",{"_index":193,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index(@res",{"_index":84,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["index(response",{"_index":72,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["individual",{"_index":309,"title":{},"body":{"index.html":{}}}],["inestapplication",{"_index":161,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}}}],["initial",{"_index":239,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":12,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["injectable",{"_index":330,"title":{},"body":{"index.html":{}}}],["injecting",{"_index":308,"title":{},"body":{"index.html":{}}}],["injectmetric",{"_index":259,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectmetric(name",{"_index":294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":317,"title":{},"body":{"index.html":{}}}],["installation",{"_index":300,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"overview.html":{}}}],["interpolate",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":137,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["keys",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":338,"title":{},"body":{"overview.html":{}}}],["line",{"_index":52,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["literal",{"_index":153,"title":{},"body":{"interfaces/PrometheusOptions.html":{}}}],["login",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":195,"title":{},"body":{"changelog.html":{}}}],["makecounterprovider",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makecounterprovider(options",{"_index":295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makedefaultoptions",{"_index":104,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["makedefaultoptions(options",{"_index":105,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["makegaugeprovider",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makegaugeprovider(options",{"_index":296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makehistogramprovider",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makehistogramprovider(options",{"_index":297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makesummaryprovider",{"_index":270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makesummaryprovider(options",{"_index":298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":65,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":71,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["metric_help",{"_index":328,"title":{},"body":{"index.html":{}}}],["metric_name",{"_index":326,"title":{},"body":{"index.html":{}}}],["metrics",{"_index":29,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":280,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":25,"title":{"modules/PrometheusModule.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["module.ts",{"_index":324,"title":{},"body":{"index.html":{}}}],["modulemetadata",{"_index":19,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["modules",{"_index":89,"title":{"modules.html":{}},"body":{"modules/PrometheusModule.html":{},"modules.html":{}}}],["mymetrics",{"_index":321,"title":{},"body":{"index.html":{}}}],["name",{"_index":78,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs",{"_index":299,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["nestjs/common/constants",{"_index":116,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["nestjs/common/interfaces",{"_index":20,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["nestjs/testing",{"_index":163,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["new",{"_index":135,"title":{},"body":{"modules/PrometheusModule.html":{},"coverage.html":{}}}],["next",{"_index":51,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["notable",{"_index":180,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":23,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["options.defaultmetrics.enabled",{"_index":148,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.imports",{"_index":129,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.inject",{"_index":141,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.path",{"_index":151,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.useclass",{"_index":133,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.useexisting",{"_index":131,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.usefactory",{"_index":139,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["optionsfactory",{"_index":143,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["optionsfactory.createprometheusoptions",{"_index":146,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["opts",{"_index":122,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["out",{"_index":344,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":337,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":276,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":77,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":32,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["path_metadata",{"_index":115,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["peer",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["pick",{"_index":8,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["private",{"_index":91,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["project",{"_index":182,"title":{},"body":{"changelog.html":{}}}],["prom",{"_index":22,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["prometheus",{"_index":24,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["prometheus\";gauge",{"_index":332,"title":{},"body":{"index.html":{}}}],["prometheus\";histogram",{"_index":333,"title":{},"body":{"index.html":{}}}],["prometheus\";summary",{"_index":334,"title":{},"body":{"index.html":{}}}],["prometheus_options",{"_index":118,"title":{},"body":{"modules/PrometheusModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prometheusasyncoptions",{"_index":1,"title":{"interfaces/PrometheusAsyncOptions.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["prometheuscontroller",{"_index":68,"title":{"controllers/PrometheusController.html":{}},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"coverage.html":{}}}],["prometheusmodule",{"_index":88,"title":{"modules/PrometheusModule.html":{}},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{},"index.html":{},"modules.html":{}}}],["prometheusmodule.configureserver(opts",{"_index":124,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["prometheusmodule.makedefaultoptions(options",{"_index":123,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["prometheusmodule.makedefaultoptions(useroptions",{"_index":147,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["prometheusmodule.register",{"_index":319,"title":{},"body":{"index.html":{}}}],["prometheusmodule.register(options",{"_index":170,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["prometheusmodule.registerasync(options",{"_index":176,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["prometheusoptions",{"_index":27,"title":{"interfaces/PrometheusOptions.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["prometheusoptionsfactory",{"_index":46,"title":{"interfaces/PrometheusOptionsFactory.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"coverage.html":{}}}],["promise",{"_index":48,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/TestHarness.html":{}}}],["provide",{"_index":138,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["provider",{"_index":100,"title":{},"body":{"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":130,"title":{},"body":{"modules/PrometheusModule.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":120,"title":{},"body":{"modules/PrometheusModule.html":{},"index.html":{}}}],["publish",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["reflect.definemetadata(path_metadata",{"_index":150,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["register",{"_index":108,"title":{},"body":{"modules/PrometheusModule.html":{},"index.html":{}}}],["register(options",{"_index":109,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["registerasync",{"_index":112,"title":{},"body":{"modules/PrometheusModule.html":{},"changelog.html":{}}}],["registerasync(options",{"_index":113,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["remove",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":165,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["request(app.gethttpserver",{"_index":174,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["request.supertest",{"_index":167,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":95,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["res",{"_index":81,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["reset",{"_index":343,"title":{},"body":{"overview.html":{}}}],["response",{"_index":73,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["response.end(client.register.metrics",{"_index":87,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["response.set(\"content",{"_index":85,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["result",{"_index":61,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":66,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":125,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["returns",{"_index":79,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptionsFactory.html":{},"miscellaneous/functions.html":{}}}],["safe",{"_index":196,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":41,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"changelog.html":{},"index.html":{}}}],["seem",{"_index":59,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["service",{"_index":325,"title":{},"body":{"index.html":{}}}],["service.ts",{"_index":329,"title":{},"body":{"index.html":{}}}],["signed",{"_index":198,"title":{},"body":{"changelog.html":{}}}],["soto",{"_index":199,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}}}],["src",{"_index":164,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["src/.../constants.ts",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../counter.ts",{"_index":285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../gauge.ts",{"_index":286,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../histogram.ts",{"_index":287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../injector.ts",{"_index":284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../summary.ts",{"_index":288,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../utils.ts",{"_index":283,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/constants.ts",{"_index":253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controller.ts",{"_index":70,"title":{},"body":{"controllers/PrometheusController.html":{},"coverage.html":{}}}],["src/controller.ts:8",{"_index":76,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["src/injector.ts",{"_index":258,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/interfaces.ts",{"_index":6,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"coverage.html":{}}}],["src/interfaces.ts:32",{"_index":155,"title":{},"body":{"interfaces/PrometheusOptionsFactory.html":{}}}],["src/metrics/counter.ts",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/gauge.ts",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/histogram.ts",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/summary.ts",{"_index":269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/utils.ts",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/module.ts",{"_index":90,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:103",{"_index":106,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:14",{"_index":110,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:25",{"_index":114,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:36",{"_index":103,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:56",{"_index":99,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:95",{"_index":96,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["standard",{"_index":184,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":178,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":92,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["step",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":33,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":313,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["supertest",{"_index":166,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["support",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":57,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["switch",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":162,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["test.createtestingmodule",{"_index":169,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["test/.../utils.ts",{"_index":282,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["test/utils.ts",{"_index":157,"title":{},"body":{"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["testharness",{"_index":156,"title":{"interfaces/TestHarness.html":{}},"body":{"interfaces/TestHarness.html":{},"coverage.html":{}}}],["testingmodule",{"_index":160,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["testingmodule.createnestapplication",{"_index":172,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":132,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["this.createasyncproviders(options",{"_index":127,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["throw",{"_index":134,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["true",{"_index":38,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":347,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":194,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":53,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["upgrade",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":28,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["usage",{"_index":301,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":13,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["useexisting",{"_index":14,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["usefactory",{"_index":140,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["usefactory?(...args",{"_index":64,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["useroptions",{"_index":144,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["using",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["v12",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":154,"title":{},"body":{"interfaces/PrometheusOptions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":353,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":185,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":80,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["way",{"_index":60,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["whether",{"_index":37,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["willsoto/nestjs",{"_index":315,"title":{},"body":{"index.html":{}}}],["willsoto@users.noreply.github.com",{"_index":200,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["workflows",{"_index":227,"title":{},"body":{"changelog.html":{}}}],["workflows/publish",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["yarn",{"_index":314,"title":{},"body":{"index.html":{}}}],["yes",{"_index":107,"title":{},"body":{"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":342,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/PrometheusAsyncOptions.html":{"url":"interfaces/PrometheusAsyncOptions.html","title":"interface - PrometheusAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PrometheusAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport * as client from \"prom-client\";\n\n/**\n * Options for the Prometheus Module\n */\nexport interface PrometheusOptions {\n  /**\n   * The URL at which Prometheus metrics will be available\n   * @default /metrics\n   */\n  path?: string;\n  /**\n   * Configuration for the defaultMetrics collected by `prom-client`.\n   */\n  defaultMetrics?: {\n    /**\n     * Whether or not default metrics are collected.\n     * @default true\n     */\n    enabled: boolean;\n    /**\n     * @see https://github.com/siimon/prom-client#default-metrics\n     * @default {}\n     */\n    config?: client.DefaultMetricsCollectorConfiguration;\n  };\n}\n\nexport interface PrometheusOptionsFactory {\n  createPrometheusOptions(): Promise | PrometheusOptions;\n}\n\nexport interface PrometheusAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject?: any[];\n  /**\n   * Not currently supported since there doesn't seem to be a way to get\n   * the result of the function during configuration.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // useFactory?(...args: any[]): Promise | PrometheusOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrometheusController.html":{"url":"controllers/PrometheusController.html","title":"controller - PrometheusController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrometheusController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            index\n                        \n                        \n                    \n                \n            \n            \n                \nindex(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res } from \"@nestjs/common\";\nimport { Response } from \"express\";\nimport * as client from \"prom-client\";\n\n@Controller()\nexport class PrometheusController {\n  @Get()\n  index(@Res() response: Response): void {\n    response.set(\"Content-Type\", client.register.contentType);\n    response.end(client.register.metrics());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrometheusModule.html":{"url":"modules/PrometheusModule.html","title":"module - PrometheusModule","body":"\n                   \n\n\n\n\n    Modules\n    PrometheusModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            configureServer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configureServer(options: Required)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Required\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: PrometheusAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: PrometheusAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            makeDefaultOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDefaultOptions(options?: PrometheusOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Required\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options?: PrometheusOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: PrometheusAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\nimport { PATH_METADATA } from \"@nestjs/common/constants\";\nimport { collectDefaultMetrics } from \"prom-client\";\nimport { PROMETHEUS_OPTIONS } from \"./constants\";\nimport { PrometheusController } from \"./controller\";\nimport {\n  PrometheusAsyncOptions,\n  PrometheusOptions,\n  PrometheusOptionsFactory,\n} from \"./interfaces\";\n\n@Module({})\nexport class PrometheusModule {\n  public static register(options?: PrometheusOptions): DynamicModule {\n    const opts = PrometheusModule.makeDefaultOptions(options);\n\n    PrometheusModule.configureServer(opts);\n\n    return {\n      module: PrometheusModule,\n      controllers: [PrometheusController],\n    };\n  }\n\n  public static registerAsync(options: PrometheusAsyncOptions): DynamicModule {\n    const asyncProviders = this.createAsyncProviders(options);\n\n    return {\n      module: PrometheusModule,\n      controllers: [PrometheusController],\n      imports: options.imports,\n      providers: [...asyncProviders],\n    };\n  }\n\n  public static createAsyncProviders(\n    options: PrometheusAsyncOptions,\n  ): Provider[] {\n    if (options.useExisting) {\n      return [this.createAsyncOptionsProvider(options)];\n    } else if (!options.useClass) {\n      throw new Error(\n        \"Invalid configuration. Must provide useClass or useExisting\",\n      );\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  public static createAsyncOptionsProvider(\n    options: PrometheusAsyncOptions,\n  ): Provider {\n    /**\n     * Not currently supported since there doesn't seem to be a way to get\n     * the result of the function during configuration.\n     */\n    // if (options.useFactory) {\n    //   return {\n    //     provide: PROMETHEUS_OPTIONS,\n    //     useFactory: options.useFactory,\n    //     inject: options.inject || [],\n    //   };\n    // }\n\n    const inject = options.useClass || options.useExisting;\n\n    if (!inject) {\n      throw new Error(\n        \"Invalid configuration. Must provide useClass or useExisting\",\n      );\n    }\n\n    return {\n      provide: PROMETHEUS_OPTIONS,\n      async useFactory(\n        optionsFactory: PrometheusOptionsFactory,\n      ): Promise {\n        const userOptions = await optionsFactory.createPrometheusOptions();\n        const opts = PrometheusModule.makeDefaultOptions(userOptions);\n\n        PrometheusModule.configureServer(opts);\n\n        return opts;\n      },\n      inject: [inject],\n    };\n  }\n\n  private static configureServer(options: Required): void {\n    if (options.defaultMetrics.enabled) {\n      collectDefaultMetrics(options.defaultMetrics.config);\n    }\n\n    Reflect.defineMetadata(PATH_METADATA, options.path, PrometheusController);\n  }\n\n  private static makeDefaultOptions(\n    options?: PrometheusOptions,\n  ): Required {\n    return {\n      path: \"/metrics\",\n      defaultMetrics: {\n        enabled: true,\n        config: {},\n      },\n      ...options,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrometheusOptions.html":{"url":"interfaces/PrometheusOptions.html","title":"interface - PrometheusOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PrometheusOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Options for the Prometheus Module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultMetrics\n                                \n                                \n                                            Optional\n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMetrics\n                                    \n                                \n                                \n                                    \n                                        defaultMetrics:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration for the defaultMetrics collected by prom-client.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : /metrics\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The URL at which Prometheus metrics will be available\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport * as client from \"prom-client\";\n\n/**\n * Options for the Prometheus Module\n */\nexport interface PrometheusOptions {\n  /**\n   * The URL at which Prometheus metrics will be available\n   * @default /metrics\n   */\n  path?: string;\n  /**\n   * Configuration for the defaultMetrics collected by `prom-client`.\n   */\n  defaultMetrics?: {\n    /**\n     * Whether or not default metrics are collected.\n     * @default true\n     */\n    enabled: boolean;\n    /**\n     * @see https://github.com/siimon/prom-client#default-metrics\n     * @default {}\n     */\n    config?: client.DefaultMetricsCollectorConfiguration;\n  };\n}\n\nexport interface PrometheusOptionsFactory {\n  createPrometheusOptions(): Promise | PrometheusOptions;\n}\n\nexport interface PrometheusAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject?: any[];\n  /**\n   * Not currently supported since there doesn't seem to be a way to get\n   * the result of the function during configuration.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // useFactory?(...args: any[]): Promise | PrometheusOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrometheusOptionsFactory.html":{"url":"interfaces/PrometheusOptionsFactory.html","title":"interface - PrometheusOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PrometheusOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createPrometheusOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPrometheusOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePrometheusOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | PrometheusOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport * as client from \"prom-client\";\n\n/**\n * Options for the Prometheus Module\n */\nexport interface PrometheusOptions {\n  /**\n   * The URL at which Prometheus metrics will be available\n   * @default /metrics\n   */\n  path?: string;\n  /**\n   * Configuration for the defaultMetrics collected by `prom-client`.\n   */\n  defaultMetrics?: {\n    /**\n     * Whether or not default metrics are collected.\n     * @default true\n     */\n    enabled: boolean;\n    /**\n     * @see https://github.com/siimon/prom-client#default-metrics\n     * @default {}\n     */\n    config?: client.DefaultMetricsCollectorConfiguration;\n  };\n}\n\nexport interface PrometheusOptionsFactory {\n  createPrometheusOptions(): Promise | PrometheusOptions;\n}\n\nexport interface PrometheusAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject?: any[];\n  /**\n   * Not currently supported since there doesn't seem to be a way to get\n   * the result of the function during configuration.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // useFactory?(...args: any[]): Promise | PrometheusOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TestHarness.html":{"url":"interfaces/TestHarness.html","title":"interface - TestHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TestHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/utils.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        agent\n                                \n                                \n                                        app\n                                \n                                \n                                        testingModule\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agent\n                                    \n                                \n                                \n                                    \n                                        agent:         Agent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Agent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                    \n                                \n                                \n                                    \n                                        app:         App\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         App\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testingModule\n                                    \n                                \n                                \n                                    \n                                        testingModule:     TestingModule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TestingModule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { INestApplication } from \"@nestjs/common\";\nimport { Test, TestingModule } from \"@nestjs/testing\";\nimport {\n  PrometheusAsyncOptions,\n  PrometheusModule,\n  PrometheusOptions,\n} from \"@src\";\nimport * as request from \"supertest\";\n\nexport type Agent = request.SuperTest;\nexport type App = INestApplication;\n\nexport interface TestHarness {\n  testingModule: TestingModule;\n  app: App;\n  agent: Agent;\n}\n\nexport async function createPrometheusModule(\n  options?: PrometheusOptions,\n): Promise {\n  const testingModule = await Test.createTestingModule({\n    imports: [PrometheusModule.register(options)],\n  }).compile();\n\n  const app = testingModule.createNestApplication();\n  await app.init();\n\n  const agent = request(app.getHttpServer());\n\n  return {\n    testingModule,\n    app,\n    agent,\n  };\n}\n\nexport async function createAsyncPrometheusModule(\n  options: PrometheusAsyncOptions,\n): Promise {\n  const testingModule = await Test.createTestingModule({\n    imports: [PrometheusModule.registerAsync(options)],\n  }).compile();\n\n  const app = testingModule.createNestApplication();\n  await app.init();\n\n  const agent = request(app.getHttpServer());\n\n  return {\n    testingModule,\n    app,\n    agent,\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.1.0 (2020-02-22)\n⚠ BREAKING CHANGES\n\nprom-client breaking changes\ninclude changes to types, so this is a major version to be safe.\nSee https://github.com/siimon/prom-client/releases/tag/v12.0.0\n\nSigned-off-by: Will Soto willsoto@users.noreply.github.com\nFeatures\n\nupgrade prom-client to v12 (75709d3)\n\n0.0.7 (2020-01-13)\n0.0.6 (2019-11-27)\nBug Fixes\n\nworkflows/publish: publish is not a script (be01dfb)\n\n0.0.5 (2019-11-27)\nBug Fixes\n\nworkflows/publish: remove login step (7c27bc9)\n\n0.0.4 (2019-11-27)\nBug Fixes\n\nworkflows/publish: remove scope (9eb3295)\n\n0.0.3 (2019-11-27)\nBug Fixes\n\nworkflows: interpolate github.ref (a85aede)\nworkflows/publish: login to the correct scope (9854da3)\n\n0.0.2 (2019-11-26)\n0.0.1 (2019-11-26)\nFeatures\n\nadd publish workflow (ba6cba2)\nall: initial commit (a895bfd)\nmodule: add support for registerAsync (036d776)\n\nBug Fixes\n\ndocs: switch to using deploy keys (8c0b22c)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            PROMETHEUS_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controller.ts\n            \n            controller\n            PrometheusController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/injector.ts\n            \n            function\n            InjectMetric\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces.ts\n            \n            interface\n            PrometheusAsyncOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces.ts\n            \n            interface\n            PrometheusOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/interfaces.ts\n            \n            interface\n            PrometheusOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/metrics/counter.ts\n            \n            function\n            makeCounterProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/gauge.ts\n            \n            function\n            makeGaugeProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/histogram.ts\n            \n            function\n            makeHistogramProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/summary.ts\n            \n            function\n            makeSummaryProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/utils.ts\n            \n            function\n            getOrCreateMetric\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/utils.ts\n            \n            function\n            getToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/utils.ts\n            \n            interface\n            TestHarness\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                test/utils.ts\n            \n            function\n            createAsyncPrometheusModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/utils.ts\n            \n            function\n            createPrometheusModule\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            prom-client : ^12.0.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createAsyncPrometheusModule   (test/.../utils.ts)\n                        \n                        \n                            createPrometheusModule   (test/.../utils.ts)\n                        \n                        \n                            getOrCreateMetric   (src/.../utils.ts)\n                        \n                        \n                            getToken   (src/.../utils.ts)\n                        \n                        \n                            InjectMetric   (src/.../injector.ts)\n                        \n                        \n                            makeCounterProvider   (src/.../counter.ts)\n                        \n                        \n                            makeGaugeProvider   (src/.../gauge.ts)\n                        \n                        \n                            makeHistogramProvider   (src/.../histogram.ts)\n                        \n                        \n                            makeSummaryProvider   (src/.../summary.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createAsyncPrometheusModule\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAsyncPrometheusModule(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPrometheusModule\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePrometheusModule(options?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getOrCreateMetric\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrCreateMetric(type, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     client.Metric\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken(name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/injector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            InjectMetric\n                        \n                        \n                    \n                \n            \n            \n                \nInjectMetric(name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/counter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeCounterProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeCounterProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/gauge.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeGaugeProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeGaugeProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/histogram.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeHistogramProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeHistogramProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/summary.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeSummaryProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeSummaryProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS Prometheus\n\n\n\n\n\nInstallation\nUsage\nChanging the metrics http endpoint\nDisabling default metrics collection\nConfiguring the default metrics\n\n\nInjecting individual metrics\nAvailable metrics\nCounter\nGauge\nHistogram\nSummary\n\n\n\n\n\nInstallation\nyarn add @willsoto/nestjs-prometheus prom-clientnpm install @willsoto/nestjs-prometheus prom-clientUsage\nimport { Module } from \"@nestjs/common\";\nimport { PrometheusModule } from \"@willsoto/nestjs-prometheus\";\n\n@Module({\n  imports: [PrometheusModule.register()],\n})\nexport class AppModule {}By default, this will register a /metrics endpoint that will return the default metrics.\nChanging the metrics http endpoint\nimport { Module } from \"@nestjs/common\";\nimport { PrometheusModule } from \"@willsoto/nestjs-prometheus\";\n\n@Module({\n  imports: [\n    PrometheusModule.register({\n      path: \"/mymetrics\",\n    }),\n  ],\n})\nexport class AppModule {}Disabling default metrics collection\nimport { Module } from \"@nestjs/common\";\nimport { PrometheusModule } from \"@willsoto/nestjs-prometheus\";\n\n@Module({\n  imports: [\n    PrometheusModule.register({\n      defaultMetrics: {\n        enabled: false,\n      },\n    }),\n  ],\n})\nexport class AppModule {}Configuring the default metrics\nimport { Module } from \"@nestjs/common\";\nimport { PrometheusModule } from \"@willsoto/nestjs-prometheus\";\n\n@Module({\n  imports: [\n    PrometheusModule.register({\n      defaultMetrics: {\n        // See https://github.com/siimon/prom-client#configuration\n        config: {},\n      },\n    }),\n  ],\n})\nexport class AppModule {}Injecting individual metrics\n// module.ts\nimport { Module } from \"@nestjs/common\";\nimport {\n  PrometheusModule,\n  makeCounterProvider,\n} from \"@willsoto/nestjs-prometheus\";\nimport { Service } from \"./service\";\n\n@Module({\n  imports: [PrometheusModule.register()],\n  providers: [\n    Service,\n    makeCounterProvider({\n      name: \"metric_name\",\n      help: \"metric_help\",\n    }),\n  ],\n})\nexport class AppModule {}// service.ts\nimport { Injectable } from \"@nestjs/common\";\nimport { Counter } from \"prom-client\";\n\n@Injectable()\nexport class Service {\n  constructor(@InjectMetric(\"metric_name\") public counter: Counter) {}\n}Available metrics\nCounter\nimport { makeCounterProvider } from \"@willsoto/nestjs-prometheus\";Gauge\nimport { makeGaugeProvider } from \"@willsoto/nestjs-prometheus\";Histogram\nimport { makeHistogramProvider } from \"@willsoto/nestjs-prometheus\";Summary\nimport { makeSummaryProvider } from \"@willsoto/nestjs-prometheus\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PrometheusModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Agent   (test/.../utils.ts)\n                        \n                        \n                            App   (test/.../utils.ts)\n                        \n                        \n                            Metrics   (src/.../utils.ts)\n                        \n                        \n                            Options   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/utils.ts\n    \n    \n        \n            \n                \n                    \n                    Agent\n                \n            \n            \n                \n                        request.SuperTest\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    App\n                \n            \n            \n                \n                            INestApplication\n\n                \n            \n        \n    \n    src/metrics/utils.ts\n    \n    \n        \n            \n                \n                    \n                    Metrics\n                \n            \n            \n                \n                        \"Gauge\" | \"Summary\" | \"Histogram\" | \"Counter\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Options\n                \n            \n            \n                \n                        client.GaugeConfiguration | client.SummaryConfiguration | client.CounterConfiguration | client.HistogramConfiguration\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PROMETHEUS_OPTIONS   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PROMETHEUS_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"PROMETHEUS_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
