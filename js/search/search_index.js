var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/PrometheusAsyncOptions.html",[0,0.559,1,0.813]],["body/interfaces/PrometheusAsyncOptions.html",[0,0.745,1,0.921,2,0.756,3,0.756,4,0.756,5,0.531,6,1.065,7,1.847,8,1.847,9,0.438,10,1.847,11,1.85,12,1.986,13,1.986,14,1.986,15,0.797,16,0.067,17,1.082,18,0.636,19,1.276,20,1.276,21,1.082,22,0.921,23,0.636,24,1.541,25,0.531,26,1.082,27,1.082,28,1.276,29,1.41,30,0.896,31,1.672,32,0.896,33,0.896,34,1.541,35,1.297,36,1.847,37,1.276,38,1.065,39,0.896,40,1.276,41,0.896,42,1.065,43,1.276,44,0.896,45,1.276,46,0.756,47,1.276,48,1.095,49,1.847,50,1.847,51,1.847,52,1.847,53,1.847,54,1.847,55,1.847,56,1.065,57,1.065,58,1.065,59,1.065,60,1.065,61,0.039,62,0.756,63,1.065,64,1.276,65,0.039,66,0.027]],["title/controllers/PrometheusController.html",[67,1.146,68,1.361]],["body/controllers/PrometheusController.html",[3,1.098,4,1.098,5,0.771,9,0.904,11,1.301,15,0.661,16,0.066,17,1.314,18,0.923,21,1.188,22,0.923,26,0.923,61,0.039,65,0.05,66,0.039,67,1.675,68,1.99,69,2.262,70,2.262,71,2.384,72,2.885,73,4.592,74,2.885,75,1.852,76,2.885,77,1.852,78,1.546,79,1.546,80,2.384,81,2.885,82,2.885,83,1.852,84,2.885,85,2.885,86,2.885,87,2.885]],["title/modules/PrometheusModule.html",[25,0.679,88,1.146]],["body/modules/PrometheusModule.html",[1,1.276,2,0.488,3,0.488,4,0.488,5,0.343,11,1.556,12,1.731,13,1.382,14,1.103,15,0.614,16,0.068,17,1.104,18,0.411,21,0.411,22,0.411,23,1.276,25,0.789,26,0.411,27,1.16,29,0.488,32,0.579,34,1.382,35,0.579,38,0.688,39,0.579,44,0.579,46,0.783,48,0.488,56,0.688,57,0.688,58,0.688,59,0.688,60,0.688,61,0.028,62,0.488,63,0.688,65,0.028,66,0.017,67,0.579,68,1.581,69,1.614,71,0.824,75,2.215,77,2.215,78,1.848,79,1.848,80,1.322,83,0.824,88,1.331,89,0.824,90,1.283,91,2.951,92,4.15,93,1.283,94,2.059,95,3.231,96,1.283,97,2.059,98,1.283,99,1.283,100,2.534,101,2.059,102,1.283,103,1.283,104,2.059,105,1.283,106,1.283,107,1.614,108,1.006,109,2.059,110,1.283,111,3.231,112,1.006,113,2.059,114,1.283,115,1.283,116,1.283,117,1.283,118,1.656,119,1.283,120,2.314,121,2.534,122,2.578,123,1.283,124,2.059,125,2.419,126,2.059,127,1.283,128,0.824,129,1.283,130,0.824,131,2.059,132,2.059,133,2.951,134,2.059,135,1.614,136,2.059,137,2.059,138,3.231,139,2.059,140,2.059,141,1.283,142,1.006,143,1.283,144,1.283,145,1.006,146,1.283,147,1.283,148,1.283,149,1.283,150,1.283,151,1.283]],["title/interfaces/PrometheusOptions.html",[0,0.559,27,0.813]],["body/interfaces/PrometheusOptions.html",[0,0.732,1,0.618,2,0.734,3,0.734,4,0.734,5,0.516,6,1.034,7,1.239,8,1.239,9,0.425,10,1.808,11,1.649,12,1.034,13,1.034,14,1.034,15,0.746,16,0.067,17,1.064,18,0.618,19,1.239,20,1.239,21,1.17,22,1.064,23,0.901,24,1.959,25,0.752,26,1.064,27,1.17,28,1.808,29,1.544,30,1.27,31,1.753,32,1.649,33,1.5,34,1.782,35,1.831,36,2.135,37,1.239,38,1.034,39,0.87,40,1.239,41,0.87,42,1.034,43,1.239,44,0.87,45,1.239,46,0.734,47,1.239,48,1.072,49,1.808,50,1.808,51,1.808,52,1.808,53,1.808,54,1.808,55,1.808,56,1.034,57,1.034,58,1.034,59,1.034,60,1.034,61,0.038,62,0.734,63,1.034,64,1.239,65,0.038,66,0.026,152,1.93,153,2.816,154,1.513]],["title/interfaces/PrometheusOptionsFactory.html",[0,0.559,46,0.967]],["body/interfaces/PrometheusOptionsFactory.html",[0,0.766,1,0.67,2,0.796,3,0.796,4,0.796,5,0.559,6,1.121,7,1.343,8,1.343,9,0.461,12,1.121,13,1.121,14,1.121,15,0.619,16,0.068,17,1.114,18,0.67,19,1.343,20,1.343,21,1.114,22,0.955,23,0.67,24,1.6,25,0.559,26,1.114,27,1.215,28,1.343,29,1.444,30,0.944,31,1.712,32,0.944,33,0.944,34,1.6,35,1.347,36,1.917,37,1.343,38,1.121,39,0.944,40,1.343,41,0.944,42,1.121,43,1.343,44,0.944,45,1.343,46,1.136,47,2.437,48,1.324,49,1.917,50,1.917,51,1.917,52,1.917,53,1.917,54,1.917,55,1.917,56,1.121,57,1.121,58,1.121,59,1.121,60,1.121,61,0.04,62,0.796,63,1.121,64,1.343,65,0.04,66,0.028,71,1.917,75,1.343,79,1.121,155,2.092]],["title/interfaces/TestHarness.html",[0,0.559,156,1.631]],["body/interfaces/TestHarness.html",[0,0.47,1,0.968,2,0.811,3,0.811,4,0.811,5,0.57,9,0.47,10,1.943,15,0.719,16,0.067,17,1.225,18,0.682,23,0.968,26,1.294,27,0.968,48,1.151,61,0.029,62,1.151,65,0.041,66,0.029,88,0.962,121,3.292,125,1.943,128,1.943,142,2.373,145,3.001,156,1.943,157,1.143,158,3.646,159,3.646,160,4.649,161,2.373,162,2.132,163,2.132,164,2.132,165,2.132,166,2.132,167,1.672,168,1.369,169,3.026,170,2.132,171,3.026,172,3.026,173,3.026,174,3.026,175,1.369,176,2.132]],["title/changelog.html",[177,1.684,178,1.684,179,1.684]],["body/changelog.html",[5,0.718,16,0.048,25,0.718,41,1.213,61,0.036,65,0.048,66,0.036,112,2.108,179,2.108,180,2.688,181,2.688,182,2.688,183,2.688,184,2.688,185,2.688,186,3.546,187,2.688,188,2.688,189,4.386,190,4.386,191,3.968,192,4.219,193,4.219,194,3.968,195,3.546,196,3.546,197,2.688,198,2.688,199,2.688,200,3.546,201,2.688,202,2.688,203,2.688,204,2.688,205,2.688,206,2.688,207,2.688,208,2.688,209,2.688,210,3.546,211,2.688,212,2.688,213,2.781,214,2.688,215,2.688,216,2.688,217,2.688,218,2.688,219,2.688,220,2.688,221,2.688,222,2.688,223,2.688,224,2.688,225,2.688,226,2.688]],["title/coverage.html",[227,2.678]],["body/coverage.html",[0,0.897,1,0.788,5,0.658,6,2.034,15,0.438,16,0.066,27,0.788,46,0.937,61,0.033,62,1.763,65,0.045,66,0.033,67,1.11,68,1.319,70,1.93,118,1.58,135,1.93,156,1.58,157,2.034,168,1.58,175,1.58,227,1.93,228,2.461,229,2.461,230,2.461,231,1.93,232,2.461,233,4.823,234,4.685,235,3.342,236,1.93,237,1.93,238,3.342,239,2.461,240,2.461,241,1.93,242,1.58,243,1.93,244,1.58,245,1.93,246,1.58,247,1.93,248,1.58,249,2.146,250,1.93,251,1.93,252,2.461,253,2.461]],["title/dependencies.html",[254,2.147,255,1.952]],["body/dependencies.html",[16,0.062,21,1.196,22,1.196,61,0.05,65,0.058,66,0.05,255,2.4,256,3.738,257,3.738]],["title/miscellaneous/functions.html",[258,0.817,259,2.385]],["body/miscellaneous/functions.html",[9,0.501,11,2.055,15,0.405,16,0.066,23,1.436,33,1.027,48,1.206,61,0.031,65,0.042,66,0.031,77,2.925,78,2.498,79,2.442,80,1.462,100,3.09,107,1.786,157,1.22,168,2.034,175,2.034,236,1.786,237,2.485,241,1.786,242,2.034,243,1.786,244,2.034,245,1.786,246,2.034,247,1.786,248,2.034,249,1.462,250,2.485,251,2.485,258,0.867,259,1.786,260,2.485,261,2.485,262,2.277,263,2.277,264,2.277,265,2.277,266,2.277,267,2.277,268,2.277,269,2.277,270,2.277,271,2.277,272,2.277,273,2.277,274,2.277,275,2.277,276,2.277]],["title/index.html",[9,0.473,177,1.684,178,1.684]],["body/index.html",[16,0.067,17,1.475,18,1.218,21,0.519,22,0.959,24,2.24,25,1.14,26,1.218,29,1.673,30,1.116,31,1.716,32,0.731,35,1.116,39,0.731,41,0.731,42,0.869,44,0.731,61,0.022,65,0.033,66,0.022,78,0.869,83,2.443,88,1.629,108,1.271,120,1.271,125,1.041,128,2.318,130,1.041,213,1.271,242,1.925,244,1.041,246,1.041,248,1.041,277,1.621,278,2.473,279,1.621,280,2.473,281,2.473,282,2.998,283,2.473,284,2.473,285,2.473,286,2.473,287,2.473,288,2.831,289,1.271,290,1.271,291,1.271,292,1.621,293,4.336,294,1.621,295,1.621,296,1.621,297,3.61,298,3.61,299,1.621,300,1.621,301,1.621,302,1.621,303,3.353,304,1.621,305,1.621,306,1.621,307,1.621,308,2.473,309,1.621,310,1.621,311,1.621,312,1.621]],["title/modules.html",[89,2.193]],["body/modules.html",[16,0.059,30,1.696,61,0.05,65,0.059,66,0.05,88,1.696,89,2.413,313,3.759,314,3.759]],["title/overview.html",[315,2.678]],["body/overview.html",[2,1.333,16,0.056,25,1.119,61,0.047,65,0.056,66,0.047,67,1.58,130,2.249,255,2.249,315,2.747,316,3.503,317,3.503,318,3.503,319,3.503,320,4.189,321,3.503,322,3.503,323,4.189,324,3.503]],["title/miscellaneous/typealiases.html",[258,0.817,325,3.041]],["body/miscellaneous/typealiases.html",[9,0.712,15,0.575,16,0.065,23,1.277,29,1.518,61,0.043,65,0.054,66,0.043,157,1.732,158,3.128,159,3.128,161,2.535,167,2.535,249,2.076,258,1.23,260,3.128,261,3.128,288,2.535,289,2.535,290,2.535,291,2.535,326,3.233,327,3.233,328,3.233,329,3.233,330,3.233]],["title/miscellaneous/variables.html",[258,0.817,331,2.385]],["body/miscellaneous/variables.html",[9,0.788,15,0.637,16,0.063,31,1.614,33,1.614,61,0.048,65,0.057,66,0.048,118,2.903,154,2.806,231,2.806,258,1.362,331,2.806,332,3.578]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":199,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":188,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["036d776",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":323,"title":{},"body":{"overview.html":{}}}],["100",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":190,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":189,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":191,"title":{},"body":{"changelog.html":{}}}],["3/3",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":324,"title":{},"body":{"overview.html":{}}}],["7c27bc9",{"_index":198,"title":{},"body":{"changelog.html":{}}}],["8c0b22c",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["9854da3",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["9eb3295",{"_index":201,"title":{},"body":{"changelog.html":{}}}],["a85aede",{"_index":206,"title":{},"body":{"changelog.html":{}}}],["a895bfd",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":213,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agent",{"_index":158,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":326,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["app",{"_index":159,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["app.init",{"_index":173,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["appmodule",{"_index":298,"title":{},"body":{"index.html":{}}}],["async",{"_index":142,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["asyncproviders",{"_index":126,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["available",{"_index":30,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":145,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["ba6cba2",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["bootstrap",{"_index":318,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":314,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":192,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":179,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":181,"title":{},"body":{"changelog.html":{}}}],["changing",{"_index":280,"title":{},"body":{"index.html":{}}}],["class",{"_index":83,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"index.html":{}}}],["client",{"_index":21,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"dependencies.html":{},"index.html":{}}}],["client#configuration",{"_index":301,"title":{},"body":{"index.html":{}}}],["client#default",{"_index":43,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["client.counterconfiguration",{"_index":329,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client.defaultmetricscollectorconfiguration",{"_index":45,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["client.gaugeconfiguration",{"_index":327,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client.histogramconfiguration",{"_index":330,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client.metric",{"_index":270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["client.register.contenttype",{"_index":86,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["client.summaryconfiguration",{"_index":328,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["clientnpm",{"_index":294,"title":{},"body":{"index.html":{}}}],["clientusage",{"_index":296,"title":{},"body":{"index.html":{}}}],["collectdefaultmetrics",{"_index":117,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["collectdefaultmetrics(options.defaultmetrics.config",{"_index":149,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["collected",{"_index":36,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["collection",{"_index":284,"title":{},"body":{"index.html":{}}}],["commit",{"_index":186,"title":{},"body":{"changelog.html":{}}}],["compile",{"_index":171,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["config",{"_index":44,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["configuration",{"_index":34,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["configureserver",{"_index":93,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["configureserver(options",{"_index":94,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["configuring",{"_index":285,"title":{},"body":{"index.html":{}}}],["const",{"_index":121,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["constants",{"_index":119,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["constructor(@injectmetric(\"metric_name",{"_index":309,"title":{},"body":{"index.html":{}}}],["controller",{"_index":67,"title":{"controllers/PrometheusController.html":{}},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":69,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{}}}],["correct",{"_index":207,"title":{},"body":{"changelog.html":{}}}],["counter",{"_index":288,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["coverage",{"_index":227,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createasyncoptionsprovider",{"_index":97,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":98,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createasyncprometheusmodule",{"_index":175,"title":{},"body":{"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createasyncprometheusmodule(options",{"_index":267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createasyncproviders",{"_index":101,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createasyncproviders(options",{"_index":102,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createprometheusmodule",{"_index":168,"title":{},"body":{"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createprometheusmodule(options",{"_index":268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createprometheusoptions",{"_index":47,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["currently",{"_index":56,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["declarations",{"_index":317,"title":{},"body":{"overview.html":{}}}],["decorators",{"_index":74,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["default",{"_index":31,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultmetrics",{"_index":35,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["defined",{"_index":75,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["dependencies",{"_index":255,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":152,"title":{},"body":{"interfaces/PrometheusOptions.html":{}}}],["disable",{"_index":50,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["disabling",{"_index":283,"title":{},"body":{"index.html":{}}}],["docs",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":183,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":58,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["during",{"_index":63,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["dynamicmodule",{"_index":111,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["enabled",{"_index":39,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["endpoint",{"_index":282,"title":{},"body":{"index.html":{}}}],["error",{"_index":136,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["eslint",{"_index":49,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["eslint/no",{"_index":54,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["explicit",{"_index":55,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["exports",{"_index":319,"title":{},"body":{"overview.html":{}}}],["express",{"_index":82,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["extends",{"_index":7,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["false",{"_index":300,"title":{},"body":{"index.html":{}}}],["features",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{}}}],["fixes",{"_index":193,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":62,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["functions",{"_index":259,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gauge",{"_index":289,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["getorcreatemetric",{"_index":250,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorcreatemetric(type",{"_index":269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":177,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gettoken",{"_index":251,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettoken(name",{"_index":271,"title":{},"body":{"miscellaneous/functions.html":{}}}],["github.ref",{"_index":205,"title":{},"body":{"changelog.html":{}}}],["graph",{"_index":313,"title":{},"body":{"modules.html":{}}}],["guidelines",{"_index":187,"title":{},"body":{"changelog.html":{}}}],["help",{"_index":305,"title":{},"body":{"index.html":{}}}],["histogram",{"_index":290,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["http",{"_index":281,"title":{},"body":{"index.html":{}}}],["https://github.com/siimon/prom",{"_index":42,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["identifier",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["imports",{"_index":128,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index(@res",{"_index":84,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["index(response",{"_index":72,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["individual",{"_index":287,"title":{},"body":{"index.html":{}}}],["inestapplication",{"_index":161,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}}}],["initial",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":12,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["injectable",{"_index":308,"title":{},"body":{"index.html":{}}}],["injecting",{"_index":286,"title":{},"body":{"index.html":{}}}],["injectmetric",{"_index":237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectmetric(name",{"_index":272,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":295,"title":{},"body":{"index.html":{}}}],["installation",{"_index":278,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"overview.html":{}}}],["interpolate",{"_index":204,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":137,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["keys",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":316,"title":{},"body":{"overview.html":{}}}],["line",{"_index":52,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["literal",{"_index":153,"title":{},"body":{"interfaces/PrometheusOptions.html":{}}}],["login",{"_index":196,"title":{},"body":{"changelog.html":{}}}],["makecounterprovider",{"_index":242,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makecounterprovider(options",{"_index":273,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makedefaultoptions",{"_index":104,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["makedefaultoptions(options",{"_index":105,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["makegaugeprovider",{"_index":244,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makegaugeprovider(options",{"_index":274,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makehistogramprovider",{"_index":246,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makehistogramprovider(options",{"_index":275,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makesummaryprovider",{"_index":248,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["makesummaryprovider(options",{"_index":276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":65,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":71,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["metric_help",{"_index":306,"title":{},"body":{"index.html":{}}}],["metric_name",{"_index":304,"title":{},"body":{"index.html":{}}}],["metrics",{"_index":29,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":258,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":25,"title":{"modules/PrometheusModule.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["module.ts",{"_index":302,"title":{},"body":{"index.html":{}}}],["modulemetadata",{"_index":19,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["modules",{"_index":89,"title":{"modules.html":{}},"body":{"modules/PrometheusModule.html":{},"modules.html":{}}}],["mymetrics",{"_index":299,"title":{},"body":{"index.html":{}}}],["name",{"_index":78,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs",{"_index":277,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["nestjs/common/constants",{"_index":116,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["nestjs/common/interfaces",{"_index":20,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["nestjs/testing",{"_index":163,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["new",{"_index":135,"title":{},"body":{"modules/PrometheusModule.html":{},"coverage.html":{}}}],["next",{"_index":51,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["notable",{"_index":180,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":23,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["options.defaultmetrics.enabled",{"_index":148,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.imports",{"_index":129,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.inject",{"_index":141,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.path",{"_index":151,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.useclass",{"_index":133,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.useexisting",{"_index":131,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.usefactory",{"_index":139,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["optionsfactory",{"_index":143,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["optionsfactory.createprometheusoptions",{"_index":146,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["opts",{"_index":122,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["out",{"_index":322,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":315,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":254,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":77,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":32,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["path_metadata",{"_index":115,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["peer",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["pick",{"_index":8,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["private",{"_index":91,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["project",{"_index":182,"title":{},"body":{"changelog.html":{}}}],["prom",{"_index":22,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"dependencies.html":{},"index.html":{}}}],["prometheus",{"_index":24,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["prometheus\";gauge",{"_index":310,"title":{},"body":{"index.html":{}}}],["prometheus\";histogram",{"_index":311,"title":{},"body":{"index.html":{}}}],["prometheus\";summary",{"_index":312,"title":{},"body":{"index.html":{}}}],["prometheus_options",{"_index":118,"title":{},"body":{"modules/PrometheusModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prometheusasyncoptions",{"_index":1,"title":{"interfaces/PrometheusAsyncOptions.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["prometheuscontroller",{"_index":68,"title":{"controllers/PrometheusController.html":{}},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"coverage.html":{}}}],["prometheusmodule",{"_index":88,"title":{"modules/PrometheusModule.html":{}},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{},"index.html":{},"modules.html":{}}}],["prometheusmodule.configureserver(opts",{"_index":124,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["prometheusmodule.makedefaultoptions(options",{"_index":123,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["prometheusmodule.makedefaultoptions(useroptions",{"_index":147,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["prometheusmodule.register",{"_index":297,"title":{},"body":{"index.html":{}}}],["prometheusmodule.register(options",{"_index":170,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["prometheusmodule.registerasync(options",{"_index":176,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["prometheusoptions",{"_index":27,"title":{"interfaces/PrometheusOptions.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["prometheusoptionsfactory",{"_index":46,"title":{"interfaces/PrometheusOptionsFactory.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"coverage.html":{}}}],["promise",{"_index":48,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/TestHarness.html":{}}}],["provide",{"_index":138,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["provider",{"_index":100,"title":{},"body":{"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":130,"title":{},"body":{"modules/PrometheusModule.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":120,"title":{},"body":{"modules/PrometheusModule.html":{},"index.html":{}}}],["publish",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["reflect.definemetadata(path_metadata",{"_index":150,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["register",{"_index":108,"title":{},"body":{"modules/PrometheusModule.html":{},"index.html":{}}}],["register(options",{"_index":109,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["registerasync",{"_index":112,"title":{},"body":{"modules/PrometheusModule.html":{},"changelog.html":{}}}],["registerasync(options",{"_index":113,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["remove",{"_index":195,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":165,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["request(app.gethttpserver",{"_index":174,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["request.supertest",{"_index":167,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":95,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["res",{"_index":81,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["reset",{"_index":321,"title":{},"body":{"overview.html":{}}}],["response",{"_index":73,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["response.end(client.register.metrics",{"_index":87,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["response.set(\"content",{"_index":85,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["result",{"_index":61,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":66,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":125,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{},"index.html":{}}}],["returns",{"_index":79,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptionsFactory.html":{},"miscellaneous/functions.html":{}}}],["scope",{"_index":200,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":41,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"changelog.html":{},"index.html":{}}}],["seem",{"_index":59,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["service",{"_index":303,"title":{},"body":{"index.html":{}}}],["service.ts",{"_index":307,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}}}],["src",{"_index":164,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["src/.../constants.ts",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../counter.ts",{"_index":263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../gauge.ts",{"_index":264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../histogram.ts",{"_index":265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../injector.ts",{"_index":262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../summary.ts",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../utils.ts",{"_index":261,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/constants.ts",{"_index":231,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controller.ts",{"_index":70,"title":{},"body":{"controllers/PrometheusController.html":{},"coverage.html":{}}}],["src/controller.ts:8",{"_index":76,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["src/injector.ts",{"_index":236,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/interfaces.ts",{"_index":6,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"coverage.html":{}}}],["src/interfaces.ts:32",{"_index":155,"title":{},"body":{"interfaces/PrometheusOptionsFactory.html":{}}}],["src/metrics/counter.ts",{"_index":241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/gauge.ts",{"_index":243,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/histogram.ts",{"_index":245,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/summary.ts",{"_index":247,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/utils.ts",{"_index":249,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/module.ts",{"_index":90,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:103",{"_index":106,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:14",{"_index":110,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:25",{"_index":114,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:36",{"_index":103,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:56",{"_index":99,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:95",{"_index":96,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["standard",{"_index":184,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":178,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":92,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["step",{"_index":197,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":33,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":291,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["supertest",{"_index":166,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["support",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":57,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["switch",{"_index":222,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":162,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["test.createtestingmodule",{"_index":169,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["test/.../utils.ts",{"_index":260,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["test/utils.ts",{"_index":157,"title":{},"body":{"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["testharness",{"_index":156,"title":{"interfaces/TestHarness.html":{}},"body":{"interfaces/TestHarness.html":{},"coverage.html":{}}}],["testingmodule",{"_index":160,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["testingmodule.createnestapplication",{"_index":172,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":132,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["this.createasyncproviders(options",{"_index":127,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["throw",{"_index":134,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["true",{"_index":38,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":325,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":53,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["url",{"_index":28,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["usage",{"_index":279,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":13,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["useexisting",{"_index":14,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["usefactory",{"_index":140,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["usefactory?(...args",{"_index":64,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["useroptions",{"_index":144,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["using",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":154,"title":{},"body":{"interfaces/PrometheusOptions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":331,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":185,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":80,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["way",{"_index":60,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["whether",{"_index":37,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["willsoto/nestjs",{"_index":293,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["workflows",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["workflows/publish",{"_index":194,"title":{},"body":{"changelog.html":{}}}],["yarn",{"_index":292,"title":{},"body":{"index.html":{}}}],["yes",{"_index":107,"title":{},"body":{"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":320,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/PrometheusAsyncOptions.html":{"url":"interfaces/PrometheusAsyncOptions.html","title":"interface - PrometheusAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PrometheusAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport * as client from \"prom-client\";\n\n/**\n * Options for the Prometheus Module\n */\nexport interface PrometheusOptions {\n  /**\n   * The URL at which Prometheus metrics will be available\n   * @default /metrics\n   */\n  path?: string;\n  /**\n   * Configuration for the defaultMetrics collected by `prom-client`.\n   */\n  defaultMetrics?: {\n    /**\n     * Whether or not default metrics are collected.\n     * @default true\n     */\n    enabled: boolean;\n    /**\n     * @see https://github.com/siimon/prom-client#default-metrics\n     * @default {}\n     */\n    config?: client.DefaultMetricsCollectorConfiguration;\n  };\n}\n\nexport interface PrometheusOptionsFactory {\n  createPrometheusOptions(): Promise | PrometheusOptions;\n}\n\nexport interface PrometheusAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject?: any[];\n  /**\n   * Not currently supported since there doesn't seem to be a way to get\n   * the result of the function during configuration.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // useFactory?(...args: any[]): Promise | PrometheusOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrometheusController.html":{"url":"controllers/PrometheusController.html","title":"controller - PrometheusController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrometheusController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            index\n                        \n                        \n                    \n                \n            \n            \n                \nindex(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res } from \"@nestjs/common\";\nimport { Response } from \"express\";\nimport * as client from \"prom-client\";\n\n@Controller()\nexport class PrometheusController {\n  @Get()\n  index(@Res() response: Response): void {\n    response.set(\"Content-Type\", client.register.contentType);\n    response.end(client.register.metrics());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrometheusModule.html":{"url":"modules/PrometheusModule.html","title":"module - PrometheusModule","body":"\n                   \n\n\n\n\n    Modules\n    PrometheusModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            configureServer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configureServer(options: Required)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Required\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: PrometheusAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: PrometheusAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            makeDefaultOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDefaultOptions(options?: PrometheusOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Required\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options?: PrometheusOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: PrometheusAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\nimport { PATH_METADATA } from \"@nestjs/common/constants\";\nimport { collectDefaultMetrics } from \"prom-client\";\nimport { PROMETHEUS_OPTIONS } from \"./constants\";\nimport { PrometheusController } from \"./controller\";\nimport {\n  PrometheusAsyncOptions,\n  PrometheusOptions,\n  PrometheusOptionsFactory,\n} from \"./interfaces\";\n\n@Module({})\nexport class PrometheusModule {\n  public static register(options?: PrometheusOptions): DynamicModule {\n    const opts = PrometheusModule.makeDefaultOptions(options);\n\n    PrometheusModule.configureServer(opts);\n\n    return {\n      module: PrometheusModule,\n      controllers: [PrometheusController],\n    };\n  }\n\n  public static registerAsync(options: PrometheusAsyncOptions): DynamicModule {\n    const asyncProviders = this.createAsyncProviders(options);\n\n    return {\n      module: PrometheusModule,\n      controllers: [PrometheusController],\n      imports: options.imports,\n      providers: [...asyncProviders],\n    };\n  }\n\n  public static createAsyncProviders(\n    options: PrometheusAsyncOptions,\n  ): Provider[] {\n    if (options.useExisting) {\n      return [this.createAsyncOptionsProvider(options)];\n    } else if (!options.useClass) {\n      throw new Error(\n        \"Invalid configuration. Must provide useClass or useExisting\",\n      );\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  public static createAsyncOptionsProvider(\n    options: PrometheusAsyncOptions,\n  ): Provider {\n    /**\n     * Not currently supported since there doesn't seem to be a way to get\n     * the result of the function during configuration.\n     */\n    // if (options.useFactory) {\n    //   return {\n    //     provide: PROMETHEUS_OPTIONS,\n    //     useFactory: options.useFactory,\n    //     inject: options.inject || [],\n    //   };\n    // }\n\n    const inject = options.useClass || options.useExisting;\n\n    if (!inject) {\n      throw new Error(\n        \"Invalid configuration. Must provide useClass or useExisting\",\n      );\n    }\n\n    return {\n      provide: PROMETHEUS_OPTIONS,\n      async useFactory(\n        optionsFactory: PrometheusOptionsFactory,\n      ): Promise {\n        const userOptions = await optionsFactory.createPrometheusOptions();\n        const opts = PrometheusModule.makeDefaultOptions(userOptions);\n\n        PrometheusModule.configureServer(opts);\n\n        return opts;\n      },\n      inject: [inject],\n    };\n  }\n\n  private static configureServer(options: Required): void {\n    if (options.defaultMetrics.enabled) {\n      collectDefaultMetrics(options.defaultMetrics.config);\n    }\n\n    Reflect.defineMetadata(PATH_METADATA, options.path, PrometheusController);\n  }\n\n  private static makeDefaultOptions(\n    options?: PrometheusOptions,\n  ): Required {\n    return {\n      path: \"/metrics\",\n      defaultMetrics: {\n        enabled: true,\n        config: {},\n      },\n      ...options,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrometheusOptions.html":{"url":"interfaces/PrometheusOptions.html","title":"interface - PrometheusOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PrometheusOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Options for the Prometheus Module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultMetrics\n                                \n                                \n                                            Optional\n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMetrics\n                                    \n                                \n                                \n                                    \n                                        defaultMetrics:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration for the defaultMetrics collected by prom-client.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : /metrics\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The URL at which Prometheus metrics will be available\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport * as client from \"prom-client\";\n\n/**\n * Options for the Prometheus Module\n */\nexport interface PrometheusOptions {\n  /**\n   * The URL at which Prometheus metrics will be available\n   * @default /metrics\n   */\n  path?: string;\n  /**\n   * Configuration for the defaultMetrics collected by `prom-client`.\n   */\n  defaultMetrics?: {\n    /**\n     * Whether or not default metrics are collected.\n     * @default true\n     */\n    enabled: boolean;\n    /**\n     * @see https://github.com/siimon/prom-client#default-metrics\n     * @default {}\n     */\n    config?: client.DefaultMetricsCollectorConfiguration;\n  };\n}\n\nexport interface PrometheusOptionsFactory {\n  createPrometheusOptions(): Promise | PrometheusOptions;\n}\n\nexport interface PrometheusAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject?: any[];\n  /**\n   * Not currently supported since there doesn't seem to be a way to get\n   * the result of the function during configuration.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // useFactory?(...args: any[]): Promise | PrometheusOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrometheusOptionsFactory.html":{"url":"interfaces/PrometheusOptionsFactory.html","title":"interface - PrometheusOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PrometheusOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createPrometheusOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPrometheusOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePrometheusOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | PrometheusOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport * as client from \"prom-client\";\n\n/**\n * Options for the Prometheus Module\n */\nexport interface PrometheusOptions {\n  /**\n   * The URL at which Prometheus metrics will be available\n   * @default /metrics\n   */\n  path?: string;\n  /**\n   * Configuration for the defaultMetrics collected by `prom-client`.\n   */\n  defaultMetrics?: {\n    /**\n     * Whether or not default metrics are collected.\n     * @default true\n     */\n    enabled: boolean;\n    /**\n     * @see https://github.com/siimon/prom-client#default-metrics\n     * @default {}\n     */\n    config?: client.DefaultMetricsCollectorConfiguration;\n  };\n}\n\nexport interface PrometheusOptionsFactory {\n  createPrometheusOptions(): Promise | PrometheusOptions;\n}\n\nexport interface PrometheusAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject?: any[];\n  /**\n   * Not currently supported since there doesn't seem to be a way to get\n   * the result of the function during configuration.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // useFactory?(...args: any[]): Promise | PrometheusOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TestHarness.html":{"url":"interfaces/TestHarness.html","title":"interface - TestHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TestHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/utils.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        agent\n                                \n                                \n                                        app\n                                \n                                \n                                        testingModule\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agent\n                                    \n                                \n                                \n                                    \n                                        agent:         Agent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Agent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                    \n                                \n                                \n                                    \n                                        app:         App\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         App\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testingModule\n                                    \n                                \n                                \n                                    \n                                        testingModule:     TestingModule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TestingModule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { INestApplication } from \"@nestjs/common\";\nimport { Test, TestingModule } from \"@nestjs/testing\";\nimport {\n  PrometheusAsyncOptions,\n  PrometheusModule,\n  PrometheusOptions,\n} from \"@src\";\nimport * as request from \"supertest\";\n\nexport type Agent = request.SuperTest;\nexport type App = INestApplication;\n\nexport interface TestHarness {\n  testingModule: TestingModule;\n  app: App;\n  agent: Agent;\n}\n\nexport async function createPrometheusModule(\n  options?: PrometheusOptions,\n): Promise {\n  const testingModule = await Test.createTestingModule({\n    imports: [PrometheusModule.register(options)],\n  }).compile();\n\n  const app = testingModule.createNestApplication();\n  await app.init();\n\n  const agent = request(app.getHttpServer());\n\n  return {\n    testingModule,\n    app,\n    agent,\n  };\n}\n\nexport async function createAsyncPrometheusModule(\n  options: PrometheusAsyncOptions,\n): Promise {\n  const testingModule = await Test.createTestingModule({\n    imports: [PrometheusModule.registerAsync(options)],\n  }).compile();\n\n  const app = testingModule.createNestApplication();\n  await app.init();\n\n  const agent = request(app.getHttpServer());\n\n  return {\n    testingModule,\n    app,\n    agent,\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.0.5 (2019-11-27)\nBug Fixes\n\nworkflows/publish: remove login step (7c27bc9)\n\n0.0.4 (2019-11-27)\nBug Fixes\n\nworkflows/publish: remove scope (9eb3295)\n\n0.0.3 (2019-11-27)\nBug Fixes\n\nworkflows: interpolate github.ref (a85aede)\nworkflows/publish: login to the correct scope (9854da3)\n\n0.0.2 (2019-11-26)\n0.0.1 (2019-11-26)\nFeatures\n\nadd publish workflow (ba6cba2)\nall: initial commit (a895bfd)\nmodule: add support for registerAsync (036d776)\n\nBug Fixes\n\ndocs: switch to using deploy keys (8c0b22c)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            PROMETHEUS_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controller.ts\n            \n            controller\n            PrometheusController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/injector.ts\n            \n            function\n            InjectMetric\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces.ts\n            \n            interface\n            PrometheusAsyncOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces.ts\n            \n            interface\n            PrometheusOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/interfaces.ts\n            \n            interface\n            PrometheusOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/metrics/counter.ts\n            \n            function\n            makeCounterProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/gauge.ts\n            \n            function\n            makeGaugeProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/histogram.ts\n            \n            function\n            makeHistogramProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/summary.ts\n            \n            function\n            makeSummaryProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/utils.ts\n            \n            function\n            getOrCreateMetric\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/utils.ts\n            \n            function\n            getToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/utils.ts\n            \n            interface\n            TestHarness\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                test/utils.ts\n            \n            function\n            createAsyncPrometheusModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/utils.ts\n            \n            function\n            createPrometheusModule\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            prom-client : ^11.5.3\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createAsyncPrometheusModule   (test/.../utils.ts)\n                        \n                        \n                            createPrometheusModule   (test/.../utils.ts)\n                        \n                        \n                            getOrCreateMetric   (src/.../utils.ts)\n                        \n                        \n                            getToken   (src/.../utils.ts)\n                        \n                        \n                            InjectMetric   (src/.../injector.ts)\n                        \n                        \n                            makeCounterProvider   (src/.../counter.ts)\n                        \n                        \n                            makeGaugeProvider   (src/.../gauge.ts)\n                        \n                        \n                            makeHistogramProvider   (src/.../histogram.ts)\n                        \n                        \n                            makeSummaryProvider   (src/.../summary.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createAsyncPrometheusModule\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAsyncPrometheusModule(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPrometheusModule\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePrometheusModule(options?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getOrCreateMetric\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrCreateMetric(type, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     client.Metric\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken(name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/injector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            InjectMetric\n                        \n                        \n                    \n                \n            \n            \n                \nInjectMetric(name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/counter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeCounterProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeCounterProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/gauge.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeGaugeProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeGaugeProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/histogram.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeHistogramProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeHistogramProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/summary.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeSummaryProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeSummaryProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS Prometheus\n\n\n\n\n\n\nInstallation\nUsage\nChanging the metrics http endpoint\nDisabling default metrics collection\nConfiguring the default metrics\n\n\nInjecting individual metrics\nAvailable metrics\nCounter\nGauge\nHistogram\nSummary\n\n\n\n\n\nInstallation\nyarn add @willsoto/nestjs-prometheus prom-clientnpm install @willsoto/nestjs-prometheus prom-clientUsage\nimport { Module } from \"@nestjs/common\";\nimport { PrometheusModule } from \"@willsoto/nestjs-prometheus\";\n\n@Module({\n  imports: [PrometheusModule.register()],\n})\nexport class AppModule {}By default, this will register a /metrics endpoint that will return the default metrics.\nChanging the metrics http endpoint\nimport { Module } from \"@nestjs/common\";\nimport { PrometheusModule } from \"@willsoto/nestjs-prometheus\";\n\n@Module({\n  imports: [\n    PrometheusModule.register({\n      path: \"/mymetrics\",\n    }),\n  ],\n})\nexport class AppModule {}Disabling default metrics collection\nimport { Module } from \"@nestjs/common\";\nimport { PrometheusModule } from \"@willsoto/nestjs-prometheus\";\n\n@Module({\n  imports: [\n    PrometheusModule.register({\n      defaultMetrics: {\n        enabled: false,\n      },\n    }),\n  ],\n})\nexport class AppModule {}Configuring the default metrics\nimport { Module } from \"@nestjs/common\";\nimport { PrometheusModule } from \"@willsoto/nestjs-prometheus\";\n\n@Module({\n  imports: [\n    PrometheusModule.register({\n      defaultMetrics: {\n        // See https://github.com/siimon/prom-client#configuration\n        config: {},\n      },\n    }),\n  ],\n})\nexport class AppModule {}Injecting individual metrics\n// module.ts\nimport { Module } from \"@nestjs/common\";\nimport {\n  PrometheusModule,\n  makeCounterProvider,\n} from \"@willsoto/nestjs-prometheus\";\nimport { Service } from \"./service\";\n\n@Module({\n  imports: [PrometheusModule.register()],\n  providers: [\n    Service,\n    makeCounterProvider({\n      name: \"metric_name\",\n      help: \"metric_help\",\n    }),\n  ],\n})\nexport class AppModule {}// service.ts\nimport { Injectable } from \"@nestjs/common\";\nimport { Counter } from \"prom-client\";\n\n@Injectable()\nexport class Service {\n  constructor(@InjectMetric(\"metric_name\") public counter: Counter) {}\n}Available metrics\nCounter\nimport { makeCounterProvider } from \"@willsoto/nestjs-prometheus\";Gauge\nimport { makeGaugeProvider } from \"@willsoto/nestjs-prometheus\";Histogram\nimport { makeHistogramProvider } from \"@willsoto/nestjs-prometheus\";Summary\nimport { makeSummaryProvider } from \"@willsoto/nestjs-prometheus\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PrometheusModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Agent   (test/.../utils.ts)\n                        \n                        \n                            App   (test/.../utils.ts)\n                        \n                        \n                            Metrics   (src/.../utils.ts)\n                        \n                        \n                            Options   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/utils.ts\n    \n    \n        \n            \n                \n                    \n                    Agent\n                \n            \n            \n                \n                        request.SuperTest\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    App\n                \n            \n            \n                \n                            INestApplication\n\n                \n            \n        \n    \n    src/metrics/utils.ts\n    \n    \n        \n            \n                \n                    \n                    Metrics\n                \n            \n            \n                \n                        \"Gauge\" | \"Summary\" | \"Histogram\" | \"Counter\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Options\n                \n            \n            \n                \n                        client.GaugeConfiguration | client.SummaryConfiguration | client.CounterConfiguration | client.HistogramConfiguration\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PROMETHEUS_OPTIONS   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PROMETHEUS_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"PROMETHEUS_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
