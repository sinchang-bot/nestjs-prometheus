var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/PrometheusAsyncOptions.html",[0,0.559,1,0.813]],["body/interfaces/PrometheusAsyncOptions.html",[0,0.709,1,0.865,2,0.695,3,0.695,4,0.695,5,0.488,6,0.978,7,1.736,8,1.736,9,0.402,10,1.736,11,1.795,12,1.907,13,1.907,14,1.907,15,0.782,16,0.067,17,1.225,18,0.695,19,1.172,20,1.172,21,1.225,22,1.029,23,0.584,24,1.449,25,0.584,26,1.225,27,1.03,28,1.172,29,1.606,30,0.978,31,1.907,32,0.978,33,0.823,34,1.449,35,1.449,36,1.736,37,1.172,38,0.978,39,0.978,40,1.172,41,0.978,42,1.172,43,1.172,44,0.978,45,1.172,46,0.695,47,1.172,48,1.029,49,1.736,50,1.736,51,1.736,52,1.736,53,1.736,54,1.736,55,1.736,56,0.978,57,0.978,58,0.978,59,0.978,60,0.978,61,0.036,62,0.695,63,0.978,64,1.172,65,0.036,66,0.024]],["title/controllers/PrometheusController.html",[67,1.146,68,1.361]],["body/controllers/PrometheusController.html",[3,1.046,4,1.046,5,0.735,9,0.884,11,1.241,15,0.64,16,0.066,17,1.527,18,1.046,21,1.37,22,1.046,26,1.046,61,0.037,65,0.048,66,0.037,67,1.624,68,1.929,69,2.157,70,2.157,71,2.311,72,2.75,73,4.533,74,2.75,75,1.766,76,2.75,77,1.766,78,1.766,79,1.474,80,2.311,81,2.75,82,2.75,83,2.157,84,2.75,85,2.75,86,2.75,87,2.75]],["title/modules/PrometheusModule.html",[25,0.813,88,1.361]],["body/modules/PrometheusModule.html",[1,1.231,2,0.436,3,0.436,4,0.436,5,0.306,11,1.477,12,1.633,13,1.28,14,1.007,15,0.583,16,0.067,17,1.246,18,0.436,21,0.436,22,0.436,23,1.231,25,0.884,26,0.436,27,1.107,29,0.517,32,0.614,34,1.28,35,0.614,38,0.614,39,0.614,44,0.614,46,0.715,48,0.436,56,0.614,57,0.614,58,0.614,59,0.614,60,0.614,61,0.025,62,0.436,63,0.614,65,0.025,66,0.015,67,0.517,68,1.48,69,1.474,71,0.736,75,2.102,77,2.102,78,2.102,79,1.755,80,1.207,83,0.899,88,1.48,89,0.736,90,1.146,91,2.762,92,4.021,93,1.146,94,1.879,95,3.048,96,1.146,97,1.879,98,1.146,99,1.146,100,2.39,101,1.879,102,1.146,103,1.146,104,1.879,105,1.146,106,1.146,107,1.474,108,1.146,109,1.879,110,1.146,111,3.048,112,0.899,113,1.879,114,1.146,115,1.146,116,1.146,117,1.146,118,1.533,119,1.146,120,2.762,121,2.39,122,2.388,123,1.146,124,1.879,125,2.83,126,1.879,127,1.146,128,0.899,129,1.146,130,0.899,131,1.879,132,1.879,133,2.762,134,1.879,135,1.474,136,1.879,137,1.879,138,3.048,139,1.879,140,1.879,141,1.146,142,0.899,143,1.146,144,1.146,145,0.899,146,1.146,147,1.146,148,1.146,149,1.146,150,1.146,151,1.146]],["title/interfaces/PrometheusOptions.html",[0,0.559,27,0.813]],["body/interfaces/PrometheusOptions.html",[0,0.696,1,0.566,2,0.673,3,0.673,4,0.673,5,0.473,6,0.948,7,1.136,8,1.136,9,0.39,10,1.695,11,1.581,12,0.948,13,0.948,14,0.948,15,0.725,16,0.067,17,1.202,18,0.673,19,1.136,20,1.136,21,1.334,22,1.202,23,0.845,24,1.878,25,0.845,26,1.202,27,1.122,28,1.695,29,1.774,30,1.415,31,2.009,32,1.878,33,1.425,34,1.693,35,2.108,36,2.029,37,1.136,38,0.948,39,0.948,40,1.136,41,0.948,42,1.136,43,1.136,44,0.948,45,1.136,46,0.673,47,1.136,48,1.005,49,1.695,50,1.695,51,1.695,52,1.695,53,1.695,54,1.695,55,1.695,56,0.948,57,0.948,58,0.948,59,0.948,60,0.948,61,0.035,62,0.673,63,0.948,64,1.136,65,0.035,66,0.024,152,1.769,153,2.641,154,1.387]],["title/interfaces/PrometheusOptionsFactory.html",[0,0.559,46,0.967]],["body/interfaces/PrometheusOptionsFactory.html",[0,0.732,1,0.618,2,0.735,3,0.735,4,0.735,5,0.516,6,1.035,7,1.24,8,1.24,9,0.425,12,1.035,13,1.035,14,1.035,15,0.592,16,0.067,17,1.266,18,0.735,19,1.24,20,1.24,21,1.266,22,1.072,23,0.618,24,1.51,25,0.618,26,1.266,27,1.17,28,1.24,29,1.649,30,1.035,31,1.959,32,1.035,33,0.871,34,1.51,35,1.51,36,1.809,37,1.24,38,1.035,39,1.035,40,1.24,41,1.035,42,1.24,43,1.24,44,1.035,45,1.24,46,1.072,47,2.347,48,1.266,49,1.809,50,1.809,51,1.809,52,1.809,53,1.809,54,1.809,55,1.809,56,1.035,57,1.035,58,1.035,59,1.035,60,1.035,61,0.038,62,0.735,63,1.035,64,1.24,65,0.038,66,0.026,71,1.809,75,1.24,79,1.035,155,1.931]],["title/interfaces/TestHarness.html",[0,0.559,156,1.631]],["body/interfaces/TestHarness.html",[0,0.434,1,0.915,2,0.75,3,0.75,4,0.75,5,0.527,9,0.434,10,1.836,15,0.698,16,0.066,17,1.405,18,0.75,23,0.915,26,1.492,27,0.915,48,1.088,61,0.026,62,1.088,65,0.038,66,0.026,88,1.056,121,3.206,125,2.242,128,2.242,142,2.242,145,2.895,156,1.836,157,1.056,158,3.592,159,3.592,160,4.581,161,2.242,162,1.971,163,1.971,164,1.971,165,1.971,166,1.971,167,1.545,168,1.265,169,2.859,170,1.971,171,2.859,172,2.859,173,2.859,174,2.859,175,1.265,176,1.971]],["title/changelog.html",[177,1.684,178,1.684,179,1.684]],["body/changelog.html",[5,0.749,16,0.049,25,0.898,41,1.503,61,0.038,65,0.049,66,0.038,112,2.199,179,2.199,180,2.804,181,2.804,182,2.804,183,2.804,184,2.804,185,2.804,186,3.645,187,2.804,188,2.804,189,4.05,190,4.05,191,2.804,192,3.645,193,3.645,194,2.804,195,2.804,196,2.804,197,2.804,198,2.804,199,2.804,200,2.804,201,2.804,202,2.804,203,2.804,204,3.645,205,2.804,206,2.804,207,3.645,208,2.804,209,2.804,210,2.804,211,2.804,212,2.804,213,2.804,214,2.804,215,2.804,216,2.804,217,2.804,218,2.804,219,2.804,220,2.804]],["title/coverage.html",[221,2.678]],["body/coverage.html",[0,0.872,1,0.738,5,0.616,6,1.966,15,0.41,16,0.065,27,0.738,46,0.877,61,0.031,62,1.739,65,0.043,66,0.031,67,1.04,68,1.235,70,1.808,118,1.48,135,1.808,156,1.48,157,1.966,168,1.48,175,1.48,221,1.808,222,2.305,223,2.305,224,2.305,225,1.808,226,2.305,227,4.778,228,4.625,229,3.196,230,1.808,231,1.808,232,3.196,233,2.305,234,2.305,235,1.808,236,1.808,237,1.808,238,1.808,239,1.808,240,1.808,241,1.808,242,1.808,243,2.052,244,1.808,245,1.808,246,2.305,247,2.305]],["title/dependencies.html",[248,2.147,249,1.952]],["body/dependencies.html",[16,0.061,21,1.406,22,1.406,61,0.05,65,0.058,66,0.05,249,2.372,250,3.694,251,3.694]],["title/miscellaneous/functions.html",[252,0.817,253,2.385]],["body/miscellaneous/functions.html",[9,0.466,11,2.021,15,0.377,16,0.065,23,1.41,33,0.955,48,1.146,61,0.028,65,0.04,66,0.028,77,2.877,78,2.952,79,2.401,80,1.359,100,2.992,107,1.66,157,1.134,168,1.933,175,1.933,230,1.66,231,2.361,235,1.66,236,2.361,237,1.66,238,2.361,239,1.66,240,2.361,241,1.66,242,2.361,243,1.359,244,2.361,245,2.361,252,0.806,253,1.66,254,2.361,255,2.361,256,2.117,257,2.117,258,2.117,259,2.117,260,2.117,261,2.117,262,2.117,263,2.117,264,2.117,265,2.117,266,2.117,267,2.117,268,2.117,269,2.117,270,2.117]],["title/index.html",[9,0.473,177,1.684,178,1.684]],["body/index.html",[16,0.059,24,2.032,61,0.051,65,0.059,66,0.051,271,3.793]],["title/modules.html",[89,2.193]],["body/modules.html",[16,0.058,30,1.993,61,0.05,65,0.058,66,0.05,88,1.993,89,2.387,272,3.719,273,3.719]],["title/overview.html",[274,2.678]],["body/overview.html",[2,1.304,16,0.055,25,1.323,61,0.046,65,0.055,66,0.046,67,1.546,130,2.688,249,2.201,274,2.688,275,3.428,276,3.428,277,3.428,278,3.428,279,4.134,280,3.428,281,3.428,282,4.134,283,3.428]],["title/miscellaneous/typealiases.html",[252,0.817,284,3.041]],["body/miscellaneous/typealiases.html",[9,0.689,15,0.556,16,0.064,23,1.251,29,1.763,61,0.042,65,0.052,66,0.042,157,1.676,158,3.064,159,3.064,161,2.452,167,2.452,243,2.008,252,1.19,254,3.064,255,3.064,285,3.127,286,3.127,287,3.127,288,3.127,289,3.127,290,3.127,291,3.127,292,3.127,293,3.127]],["title/miscellaneous/variables.html",[252,0.817,294,2.385]],["body/miscellaneous/variables.html",[9,0.774,15,0.625,16,0.062,31,1.882,33,1.584,61,0.047,65,0.056,66,0.047,118,2.88,154,2.754,225,2.754,252,1.337,294,2.754,295,3.512]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":205,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":188,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["036d776",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":282,"title":{},"body":{"overview.html":{}}}],["100",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":190,"title":{},"body":{"changelog.html":{}}}],["11.5.3",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":189,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":204,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":191,"title":{},"body":{"changelog.html":{}}}],["3/3",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":283,"title":{},"body":{"overview.html":{}}}],["8c0b22c",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["9854da3",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["a85aede",{"_index":197,"title":{},"body":{"changelog.html":{}}}],["a895bfd",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":207,"title":{},"body":{"changelog.html":{}}}],["agent",{"_index":158,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":285,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["app",{"_index":159,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["app.init",{"_index":173,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["async",{"_index":142,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["asyncproviders",{"_index":126,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["available",{"_index":30,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"modules.html":{}}}],["await",{"_index":145,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["ba6cba2",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["bootstrap",{"_index":277,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":273,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":192,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":179,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":181,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":83,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{}}}],["client",{"_index":21,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"dependencies.html":{}}}],["client#default",{"_index":43,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["client.counterconfiguration",{"_index":292,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client.defaultmetricscollectorconfiguration",{"_index":45,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["client.gaugeconfiguration",{"_index":290,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client.histogramconfiguration",{"_index":293,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client.metric",{"_index":264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["client.register.contenttype",{"_index":86,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["client.summaryconfiguration",{"_index":291,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["collectdefaultmetrics",{"_index":117,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["collectdefaultmetrics(options.defaultmetrics.config",{"_index":149,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["collected",{"_index":36,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["commit",{"_index":186,"title":{},"body":{"changelog.html":{}}}],["compile",{"_index":171,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["config",{"_index":44,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["configuration",{"_index":34,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["configureserver",{"_index":93,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["configureserver(options",{"_index":94,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["const",{"_index":121,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["constants",{"_index":119,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["controller",{"_index":67,"title":{"controllers/PrometheusController.html":{}},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":69,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{}}}],["correct",{"_index":200,"title":{},"body":{"changelog.html":{}}}],["counter",{"_index":289,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["coverage",{"_index":221,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createasyncoptionsprovider",{"_index":97,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createasyncoptionsprovider(options",{"_index":98,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createasyncprometheusmodule",{"_index":175,"title":{},"body":{"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createasyncprometheusmodule(options",{"_index":261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createasyncproviders",{"_index":101,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createasyncproviders(options",{"_index":102,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["createprometheusmodule",{"_index":168,"title":{},"body":{"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createprometheusmodule(options",{"_index":262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createprometheusoptions",{"_index":47,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["currently",{"_index":56,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["declarations",{"_index":276,"title":{},"body":{"overview.html":{}}}],["decorators",{"_index":74,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["default",{"_index":31,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["defaultmetrics",{"_index":35,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["defined",{"_index":75,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["dependencies",{"_index":249,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":152,"title":{},"body":{"interfaces/PrometheusOptions.html":{}}}],["disable",{"_index":50,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["docs",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":183,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":58,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["during",{"_index":63,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["dynamicmodule",{"_index":111,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["enabled",{"_index":39,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["error",{"_index":136,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["eslint",{"_index":49,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["eslint/no",{"_index":54,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["explicit",{"_index":55,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}}}],["exports",{"_index":278,"title":{},"body":{"overview.html":{}}}],["express",{"_index":82,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["extends",{"_index":7,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["features",{"_index":206,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{}}}],["fixes",{"_index":193,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":62,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["functions",{"_index":253,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gauge",{"_index":286,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getorcreatemetric",{"_index":244,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorcreatemetric(type",{"_index":263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":177,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gettoken",{"_index":245,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettoken(name",{"_index":265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["github.ref",{"_index":196,"title":{},"body":{"changelog.html":{}}}],["graph",{"_index":272,"title":{},"body":{"modules.html":{}}}],["guidelines",{"_index":187,"title":{},"body":{"changelog.html":{}}}],["histogram",{"_index":288,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["https://github.com/siimon/prom",{"_index":42,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["identifier",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}}}],["imports",{"_index":128,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index(@res",{"_index":84,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["index(response",{"_index":72,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["inestapplication",{"_index":161,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}}}],["initial",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":12,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["injectmetric",{"_index":231,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["injectmetric(name",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interface",{"_index":0,"title":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"overview.html":{}}}],["interpolate",{"_index":195,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":137,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["keys",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":275,"title":{},"body":{"overview.html":{}}}],["line",{"_index":52,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["literal",{"_index":153,"title":{},"body":{"interfaces/PrometheusOptions.html":{}}}],["login",{"_index":199,"title":{},"body":{"changelog.html":{}}}],["makecounterprovider",{"_index":236,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makecounterprovider(options",{"_index":267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makedefaultoptions",{"_index":104,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["makedefaultoptions(options",{"_index":105,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["makegaugeprovider",{"_index":238,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makegaugeprovider(options",{"_index":268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makehistogramprovider",{"_index":240,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makehistogramprovider(options",{"_index":269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makesummaryprovider",{"_index":242,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makesummaryprovider(options",{"_index":270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":65,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":71,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["metrics",{"_index":29,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":252,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":25,"title":{"modules/PrometheusModule.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"changelog.html":{},"overview.html":{}}}],["modulemetadata",{"_index":19,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["modules",{"_index":89,"title":{"modules.html":{}},"body":{"modules/PrometheusModule.html":{},"modules.html":{}}}],["name",{"_index":78,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["nestjs",{"_index":271,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}}}],["nestjs/common/constants",{"_index":116,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["nestjs/common/interfaces",{"_index":20,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["nestjs/testing",{"_index":163,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["new",{"_index":135,"title":{},"body":{"modules/PrometheusModule.html":{},"coverage.html":{}}}],["next",{"_index":51,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["notable",{"_index":180,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":23,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["options.defaultmetrics.enabled",{"_index":148,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.imports",{"_index":129,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.inject",{"_index":141,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.path",{"_index":151,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.useclass",{"_index":133,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.useexisting",{"_index":131,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["options.usefactory",{"_index":139,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["optionsfactory",{"_index":143,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["optionsfactory.createprometheusoptions",{"_index":146,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["opts",{"_index":122,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["out",{"_index":281,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":274,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":248,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":77,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":32,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["path_metadata",{"_index":115,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["peer",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["pick",{"_index":8,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["private",{"_index":91,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["project",{"_index":182,"title":{},"body":{"changelog.html":{}}}],["prom",{"_index":22,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"dependencies.html":{}}}],["prometheus",{"_index":24,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"index.html":{}}}],["prometheus_options",{"_index":118,"title":{},"body":{"modules/PrometheusModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prometheusasyncoptions",{"_index":1,"title":{"interfaces/PrometheusAsyncOptions.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["prometheuscontroller",{"_index":68,"title":{"controllers/PrometheusController.html":{}},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"coverage.html":{}}}],["prometheusmodule",{"_index":88,"title":{"modules/PrometheusModule.html":{}},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{},"modules.html":{}}}],["prometheusmodule.configureserver(opts",{"_index":124,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["prometheusmodule.makedefaultoptions(options",{"_index":123,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["prometheusmodule.makedefaultoptions(useroptions",{"_index":147,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["prometheusmodule.register(options",{"_index":170,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["prometheusmodule.registerasync(options",{"_index":176,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["prometheusoptions",{"_index":27,"title":{"interfaces/PrometheusOptions.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{}}}],["prometheusoptionsfactory",{"_index":46,"title":{"interfaces/PrometheusOptionsFactory.html":{}},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"coverage.html":{}}}],["promise",{"_index":48,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/TestHarness.html":{}}}],["provide",{"_index":138,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["provider",{"_index":100,"title":{},"body":{"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":130,"title":{},"body":{"modules/PrometheusModule.html":{},"overview.html":{}}}],["public",{"_index":120,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["publish",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["reflect.definemetadata(path_metadata",{"_index":150,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["register",{"_index":108,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["register(options",{"_index":109,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["registerasync",{"_index":112,"title":{},"body":{"modules/PrometheusModule.html":{},"changelog.html":{}}}],["registerasync(options",{"_index":113,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["request",{"_index":165,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["request(app.gethttpserver",{"_index":174,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["request.supertest",{"_index":167,"title":{},"body":{"interfaces/TestHarness.html":{},"miscellaneous/typealiases.html":{}}}],["required",{"_index":95,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["res",{"_index":81,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["reset",{"_index":280,"title":{},"body":{"overview.html":{}}}],["response",{"_index":73,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["response.end(client.register.metrics",{"_index":87,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["response.set(\"content",{"_index":85,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["result",{"_index":61,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":66,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":125,"title":{},"body":{"modules/PrometheusModule.html":{},"interfaces/TestHarness.html":{}}}],["returns",{"_index":79,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptionsFactory.html":{},"miscellaneous/functions.html":{}}}],["scope",{"_index":201,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":41,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"changelog.html":{}}}],["seem",{"_index":59,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{}}}],["src",{"_index":164,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["src/.../constants.ts",{"_index":295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../counter.ts",{"_index":257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../gauge.ts",{"_index":258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../histogram.ts",{"_index":259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../injector.ts",{"_index":256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../summary.ts",{"_index":260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../utils.ts",{"_index":255,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/constants.ts",{"_index":225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controller.ts",{"_index":70,"title":{},"body":{"controllers/PrometheusController.html":{},"coverage.html":{}}}],["src/controller.ts:8",{"_index":76,"title":{},"body":{"controllers/PrometheusController.html":{}}}],["src/injector.ts",{"_index":230,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/interfaces.ts",{"_index":6,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"coverage.html":{}}}],["src/interfaces.ts:32",{"_index":155,"title":{},"body":{"interfaces/PrometheusOptionsFactory.html":{}}}],["src/metrics/counter.ts",{"_index":235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/gauge.ts",{"_index":237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/histogram.ts",{"_index":239,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/summary.ts",{"_index":241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/metrics/utils.ts",{"_index":243,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/module.ts",{"_index":90,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:103",{"_index":106,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:14",{"_index":110,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:25",{"_index":114,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:36",{"_index":103,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:56",{"_index":99,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["src/module.ts:95",{"_index":96,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["standard",{"_index":184,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":178,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["statements",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":92,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["string",{"_index":33,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":287,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["supertest",{"_index":166,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["support",{"_index":213,"title":{},"body":{"changelog.html":{}}}],["supported",{"_index":57,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["switch",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":162,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["test.createtestingmodule",{"_index":169,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["test/.../utils.ts",{"_index":254,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["test/utils.ts",{"_index":157,"title":{},"body":{"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["testharness",{"_index":156,"title":{"interfaces/TestHarness.html":{}},"body":{"interfaces/TestHarness.html":{},"coverage.html":{}}}],["testingmodule",{"_index":160,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["testingmodule.createnestapplication",{"_index":172,"title":{},"body":{"interfaces/TestHarness.html":{}}}],["this.createasyncoptionsprovider(options",{"_index":132,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["this.createasyncproviders(options",{"_index":127,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["throw",{"_index":134,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["true",{"_index":38,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{},"interfaces/TestHarness.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":284,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":53,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["url",{"_index":28,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["useclass",{"_index":13,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["useexisting",{"_index":14,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["usefactory",{"_index":140,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["usefactory?(...args",{"_index":64,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["useroptions",{"_index":144,"title":{},"body":{"modules/PrometheusModule.html":{}}}],["using",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":154,"title":{},"body":{"interfaces/PrometheusOptions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":294,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":185,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":80,"title":{},"body":{"controllers/PrometheusController.html":{},"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["way",{"_index":60,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"modules/PrometheusModule.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["whether",{"_index":37,"title":{},"body":{"interfaces/PrometheusAsyncOptions.html":{},"interfaces/PrometheusOptions.html":{},"interfaces/PrometheusOptionsFactory.html":{}}}],["workflow",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["workflows",{"_index":194,"title":{},"body":{"changelog.html":{}}}],["workflows/publish",{"_index":198,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":107,"title":{},"body":{"modules/PrometheusModule.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":279,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/PrometheusAsyncOptions.html":{"url":"interfaces/PrometheusAsyncOptions.html","title":"interface - PrometheusAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PrometheusAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:         Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport * as client from \"prom-client\";\n\n/**\n * Options for the Prometheus Module\n */\nexport interface PrometheusOptions {\n  /**\n   * The URL at which Prometheus metrics will be available\n   * @default /metrics\n   */\n  path?: string;\n  /**\n   * Configuration for the defaultMetrics collected by `prom-client`.\n   */\n  defaultMetrics?: {\n    /**\n     * Whether or not default metrics are collected.\n     * @default true\n     */\n    enabled: boolean;\n    /**\n     * @see https://github.com/siimon/prom-client#default-metrics\n     * @default {}\n     */\n    config?: client.DefaultMetricsCollectorConfiguration;\n  };\n}\n\nexport interface PrometheusOptionsFactory {\n  createPrometheusOptions(): Promise | PrometheusOptions;\n}\n\nexport interface PrometheusAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject?: any[];\n  /**\n   * Not currently supported since there doesn't seem to be a way to get\n   * the result of the function during configuration.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // useFactory?(...args: any[]): Promise | PrometheusOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrometheusController.html":{"url":"controllers/PrometheusController.html","title":"controller - PrometheusController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrometheusController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            index\n                        \n                        \n                    \n                \n            \n            \n                \nindex(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res } from \"@nestjs/common\";\nimport { Response } from \"express\";\nimport * as client from \"prom-client\";\n\n@Controller()\nexport class PrometheusController {\n  @Get()\n  index(@Res() response: Response): void {\n    response.set(\"Content-Type\", client.register.contentType);\n    response.end(client.register.metrics());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrometheusModule.html":{"url":"modules/PrometheusModule.html","title":"module - PrometheusModule","body":"\n                   \n\n\n\n\n    Modules\n    PrometheusModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            configureServer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configureServer(options: Required)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Required\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createAsyncOptionsProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncOptionsProvider(options: PrometheusAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createAsyncProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsyncProviders(options: PrometheusAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            makeDefaultOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDefaultOptions(options?: PrometheusOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Required\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options?: PrometheusOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            registerAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: PrometheusAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/module.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                PrometheusAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from \"@nestjs/common\";\nimport { PATH_METADATA } from \"@nestjs/common/constants\";\nimport { collectDefaultMetrics } from \"prom-client\";\nimport { PROMETHEUS_OPTIONS } from \"./constants\";\nimport { PrometheusController } from \"./controller\";\nimport {\n  PrometheusAsyncOptions,\n  PrometheusOptions,\n  PrometheusOptionsFactory,\n} from \"./interfaces\";\n\n@Module({})\nexport class PrometheusModule {\n  public static register(options?: PrometheusOptions): DynamicModule {\n    const opts = PrometheusModule.makeDefaultOptions(options);\n\n    PrometheusModule.configureServer(opts);\n\n    return {\n      module: PrometheusModule,\n      controllers: [PrometheusController],\n    };\n  }\n\n  public static registerAsync(options: PrometheusAsyncOptions): DynamicModule {\n    const asyncProviders = this.createAsyncProviders(options);\n\n    return {\n      module: PrometheusModule,\n      controllers: [PrometheusController],\n      imports: options.imports,\n      providers: [...asyncProviders],\n    };\n  }\n\n  public static createAsyncProviders(\n    options: PrometheusAsyncOptions,\n  ): Provider[] {\n    if (options.useExisting) {\n      return [this.createAsyncOptionsProvider(options)];\n    } else if (!options.useClass) {\n      throw new Error(\n        \"Invalid configuration. Must provide useClass or useExisting\",\n      );\n    }\n\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  public static createAsyncOptionsProvider(\n    options: PrometheusAsyncOptions,\n  ): Provider {\n    /**\n     * Not currently supported since there doesn't seem to be a way to get\n     * the result of the function during configuration.\n     */\n    // if (options.useFactory) {\n    //   return {\n    //     provide: PROMETHEUS_OPTIONS,\n    //     useFactory: options.useFactory,\n    //     inject: options.inject || [],\n    //   };\n    // }\n\n    const inject = options.useClass || options.useExisting;\n\n    if (!inject) {\n      throw new Error(\n        \"Invalid configuration. Must provide useClass or useExisting\",\n      );\n    }\n\n    return {\n      provide: PROMETHEUS_OPTIONS,\n      async useFactory(\n        optionsFactory: PrometheusOptionsFactory,\n      ): Promise {\n        const userOptions = await optionsFactory.createPrometheusOptions();\n        const opts = PrometheusModule.makeDefaultOptions(userOptions);\n\n        PrometheusModule.configureServer(opts);\n\n        return opts;\n      },\n      inject: [inject],\n    };\n  }\n\n  private static configureServer(options: Required): void {\n    if (options.defaultMetrics.enabled) {\n      collectDefaultMetrics(options.defaultMetrics.config);\n    }\n\n    Reflect.defineMetadata(PATH_METADATA, options.path, PrometheusController);\n  }\n\n  private static makeDefaultOptions(\n    options?: PrometheusOptions,\n  ): Required {\n    return {\n      path: \"/metrics\",\n      defaultMetrics: {\n        enabled: true,\n        config: {},\n      },\n      ...options,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrometheusOptions.html":{"url":"interfaces/PrometheusOptions.html","title":"interface - PrometheusOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PrometheusOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Options for the Prometheus Module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultMetrics\n                                \n                                \n                                            Optional\n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMetrics\n                                    \n                                \n                                \n                                    \n                                        defaultMetrics:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration for the defaultMetrics collected by prom-client.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : /metrics\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The URL at which Prometheus metrics will be available\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport * as client from \"prom-client\";\n\n/**\n * Options for the Prometheus Module\n */\nexport interface PrometheusOptions {\n  /**\n   * The URL at which Prometheus metrics will be available\n   * @default /metrics\n   */\n  path?: string;\n  /**\n   * Configuration for the defaultMetrics collected by `prom-client`.\n   */\n  defaultMetrics?: {\n    /**\n     * Whether or not default metrics are collected.\n     * @default true\n     */\n    enabled: boolean;\n    /**\n     * @see https://github.com/siimon/prom-client#default-metrics\n     * @default {}\n     */\n    config?: client.DefaultMetricsCollectorConfiguration;\n  };\n}\n\nexport interface PrometheusOptionsFactory {\n  createPrometheusOptions(): Promise | PrometheusOptions;\n}\n\nexport interface PrometheusAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject?: any[];\n  /**\n   * Not currently supported since there doesn't seem to be a way to get\n   * the result of the function during configuration.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // useFactory?(...args: any[]): Promise | PrometheusOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrometheusOptionsFactory.html":{"url":"interfaces/PrometheusOptionsFactory.html","title":"interface - PrometheusOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PrometheusOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createPrometheusOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPrometheusOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePrometheusOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/interfaces.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise | PrometheusOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type } from \"@nestjs/common\";\nimport { ModuleMetadata } from \"@nestjs/common/interfaces\";\nimport * as client from \"prom-client\";\n\n/**\n * Options for the Prometheus Module\n */\nexport interface PrometheusOptions {\n  /**\n   * The URL at which Prometheus metrics will be available\n   * @default /metrics\n   */\n  path?: string;\n  /**\n   * Configuration for the defaultMetrics collected by `prom-client`.\n   */\n  defaultMetrics?: {\n    /**\n     * Whether or not default metrics are collected.\n     * @default true\n     */\n    enabled: boolean;\n    /**\n     * @see https://github.com/siimon/prom-client#default-metrics\n     * @default {}\n     */\n    config?: client.DefaultMetricsCollectorConfiguration;\n  };\n}\n\nexport interface PrometheusOptionsFactory {\n  createPrometheusOptions(): Promise | PrometheusOptions;\n}\n\nexport interface PrometheusAsyncOptions\n  extends Pick {\n  useExisting?: Type;\n  useClass?: Type;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inject?: any[];\n  /**\n   * Not currently supported since there doesn't seem to be a way to get\n   * the result of the function during configuration.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // useFactory?(...args: any[]): Promise | PrometheusOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TestHarness.html":{"url":"interfaces/TestHarness.html","title":"interface - TestHarness","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TestHarness\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/utils.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        agent\n                                \n                                \n                                        app\n                                \n                                \n                                        testingModule\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agent\n                                    \n                                \n                                \n                                    \n                                        agent:         Agent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Agent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        app\n                                    \n                                \n                                \n                                    \n                                        app:         App\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         App\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testingModule\n                                    \n                                \n                                \n                                    \n                                        testingModule:     TestingModule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TestingModule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { INestApplication } from \"@nestjs/common\";\nimport { Test, TestingModule } from \"@nestjs/testing\";\nimport {\n  PrometheusAsyncOptions,\n  PrometheusModule,\n  PrometheusOptions,\n} from \"@src\";\nimport * as request from \"supertest\";\n\nexport type Agent = request.SuperTest;\nexport type App = INestApplication;\n\nexport interface TestHarness {\n  testingModule: TestingModule;\n  app: App;\n  agent: Agent;\n}\n\nexport async function createPrometheusModule(\n  options?: PrometheusOptions,\n): Promise {\n  const testingModule = await Test.createTestingModule({\n    imports: [PrometheusModule.register(options)],\n  }).compile();\n\n  const app = testingModule.createNestApplication();\n  await app.init();\n\n  const agent = request(app.getHttpServer());\n\n  return {\n    testingModule,\n    app,\n    agent,\n  };\n}\n\nexport async function createAsyncPrometheusModule(\n  options: PrometheusAsyncOptions,\n): Promise {\n  const testingModule = await Test.createTestingModule({\n    imports: [PrometheusModule.registerAsync(options)],\n  }).compile();\n\n  const app = testingModule.createNestApplication();\n  await app.init();\n\n  const agent = request(app.getHttpServer());\n\n  return {\n    testingModule,\n    app,\n    agent,\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.0.3 (2019-11-27)\nBug Fixes\n\nworkflows: interpolate github.ref (a85aede)\nworkflows/publish: login to the correct scope (9854da3)\n\n0.0.2 (2019-11-26)\n0.0.1 (2019-11-26)\nFeatures\n\nadd publish workflow (ba6cba2)\nall: initial commit (a895bfd)\nmodule: add support for registerAsync (036d776)\n\nBug Fixes\n\ndocs: switch to using deploy keys (8c0b22c)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            PROMETHEUS_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controller.ts\n            \n            controller\n            PrometheusController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/injector.ts\n            \n            function\n            InjectMetric\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces.ts\n            \n            interface\n            PrometheusAsyncOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces.ts\n            \n            interface\n            PrometheusOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/interfaces.ts\n            \n            interface\n            PrometheusOptionsFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/metrics/counter.ts\n            \n            function\n            makeCounterProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/gauge.ts\n            \n            function\n            makeGaugeProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/histogram.ts\n            \n            function\n            makeHistogramProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/summary.ts\n            \n            function\n            makeSummaryProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/utils.ts\n            \n            function\n            getOrCreateMetric\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/metrics/utils.ts\n            \n            function\n            getToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/utils.ts\n            \n            interface\n            TestHarness\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                test/utils.ts\n            \n            function\n            createAsyncPrometheusModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/utils.ts\n            \n            function\n            createPrometheusModule\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            prom-client : ^11.5.3\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createAsyncPrometheusModule   (test/.../utils.ts)\n                        \n                        \n                            createPrometheusModule   (test/.../utils.ts)\n                        \n                        \n                            getOrCreateMetric   (src/.../utils.ts)\n                        \n                        \n                            getToken   (src/.../utils.ts)\n                        \n                        \n                            InjectMetric   (src/.../injector.ts)\n                        \n                        \n                            makeCounterProvider   (src/.../counter.ts)\n                        \n                        \n                            makeGaugeProvider   (src/.../gauge.ts)\n                        \n                        \n                            makeHistogramProvider   (src/.../histogram.ts)\n                        \n                        \n                            makeSummaryProvider   (src/.../summary.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createAsyncPrometheusModule\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAsyncPrometheusModule(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPrometheusModule\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePrometheusModule(options?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getOrCreateMetric\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrCreateMetric(type, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     client.Metric\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken(name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/injector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            InjectMetric\n                        \n                        \n                    \n                \n            \n            \n                \nInjectMetric(name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/counter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeCounterProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeCounterProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/gauge.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeGaugeProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeGaugeProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/histogram.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeHistogramProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeHistogramProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/metrics/summary.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            makeSummaryProvider\n                        \n                        \n                    \n                \n            \n            \n                \nmakeSummaryProvider(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Provider\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS Prometheus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        PrometheusModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Agent   (test/.../utils.ts)\n                        \n                        \n                            App   (test/.../utils.ts)\n                        \n                        \n                            Metrics   (src/.../utils.ts)\n                        \n                        \n                            Options   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/utils.ts\n    \n    \n        \n            \n                \n                    \n                    Agent\n                \n            \n            \n                \n                        request.SuperTest\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    App\n                \n            \n            \n                \n                            INestApplication\n\n                \n            \n        \n    \n    src/metrics/utils.ts\n    \n    \n        \n            \n                \n                    \n                    Metrics\n                \n            \n            \n                \n                        \"Gauge\" | \"Summary\" | \"Histogram\" | \"Counter\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Options\n                \n            \n            \n                \n                        client.GaugeConfiguration | client.SummaryConfiguration | client.CounterConfiguration | client.HistogramConfiguration\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PROMETHEUS_OPTIONS   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PROMETHEUS_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"PROMETHEUS_OPTIONS\"\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
